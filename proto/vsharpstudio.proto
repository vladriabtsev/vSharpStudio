syntax = "proto3";

import "google/protobuf/wrappers.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/duration.proto";
import "google/protobuf/empty.proto";

//option java_multiple_files = true;
//option java_package = "io.grpc.examples.routeguide";
//option java_outer_classname = "RouteGuideProto";
//option objc_class_prefix = "RTG";

package Proto.Config;

// use 'proto_' prefix for all messages !!!

// Configuration config
message proto_config {
	enum EnumDbType {
		MS_SQL_SERVER = 0;
		MS_SQL_FILE = 1;
	}
	// Unique Guid for configuration (for comparison)
	string guid = 1;
	string version = 2;
	string name = 3;

    // CONNECTION STRING SECTION

    // if yes: 
    //    Try to find one connecion string in config file. If more than one connection string found we use use connection_string_name.
    // if no:
    //    1. Find DB type from 
    //    2. Create connection string from db_server, db_database_name, db_user
    bool is_db_from_connection_string = 11; 
	string connection_string_name = 12;
    EnumDbType db_type_enum = 13;
	string db_server = 14;
	string db_database_name = 15;
    bool is_db_windows_authentication = 16; 
	string db_user = 17;
	string db_passwork = 18;
	// path to project with config file containing connection string. Usefull for UNIT tests.
    // it will override previous settings
	string path_to_project_with_connection_string = 19;

    // GENERAL DB SETTINGS

	string db_schema = 31;
	string primary_key_name = 32;
    bool is_primary_key_clustered = 33; // MsSql
    bool is_memory_optimized = 34; // MsSql
    bool is_sequence_hi_lo = 35; // SequenceHiLo or IdentityColumn. MsSql
    string hi_lo_sequence_name = 36; // MsSql
    string hi_lo_schema = 37; // MsSql

    // CONFIG OBJECTS

	proto_constants constants = 101;
	proto_enumerations enumerators = 102;
	proto_catalogs catalogs = 103;
}
message proto_property {
	string guid = 1;
	string name = 2;
	proto_data_type data_type = 3;
}
message proto_data_type {
	enum EnumDataType {
		STRING = 0;
		NUMERICAL = 1;
		BOOL = 5;

		CONSTANT = 7;
		ENUM = 8;
		CATALOG = 9;
		CATALOGS = 10;
		DOCUMENT = 11;
		DOCUMENTS = 12;

		Any = 15;
	}
	EnumDataType data_type_enum = 1; 
	uint32 length = 2; 
	uint32 accuracy = 3; 
	bool is_positive = 4; 
    string guid = 5;
    string min_value_string = 6;
    string max_value_string = 7;
    string object_name = 8;
}
message proto_properties {
	string name = 1;
	repeated proto_property list_properties = 2;
}
message proto_constant {
	string guid = 1;
	string name = 2;
	proto_property constant_type = 3;
}
message proto_constants {
	string group_name = 1;
	repeated proto_constant list_constants = 2;
}
message proto_enumeration {
	string guid = 1;
	string name = 2;
}
message proto_enumerations {
	string name = 1;
	repeated proto_enumeration list_enumerations = 2;
}
message proto_catalog {
	string guid = 1;
	string name = 2;
    bool_nullable is_primary_key_clustered = 4; // MsSql
    bool_nullable is_memory_optimized = 5; // MsSql
    bool_nullable is_sequence_hi_lo = 6; // SequenceHiLo or IdentityColumn. MsSql
    string hi_lo_sequence_name = 7; // MsSql
    string hi_lo_schema = 8; // MsSql

	proto_properties properties = 15;
}
message proto_catalogs {
	string name = 1;
	repeated proto_property list_shared_properties = 2;
	repeated proto_catalog list_catalogs = 3;
}
message proto_document {
	string guid = 1;
	string name = 2;
	repeated proto_properties properties = 3;
}
message proto_documents {
	string group_name = 1;
	repeated proto_property list_shared_properties = 2;
	repeated proto_document list_documents = 3;
}
/*
message proto_journal {
	string guid = 1;
	string name = 2;
	repeated proto_properties properties = 3;
}
message proto_journals {
	string group_name = 1;
	repeated proto_property list_shared_properties = 2;
	repeated proto_document list_documents = 3;
}
*/

// all simple nullable (generator check suffics '_nullable')
message bool_nullable {
	bool has_value = 1;
	bool value = 2;
}
