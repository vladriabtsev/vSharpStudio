<#@ template language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
using System.Collections.Generic;
using Google.Protobuf.WellKnownTypes;
using ViewModelBase;

namespace vSharpStudio.common // <#=Helper.FilePos() #>
{
<# foreach(var t in root.EnumTypes) { this.PushIndent("\t"); #>
public enum <#= t.Name.ToNameCs() #> { // <#=Helper.FilePos() #>
<#    foreach (var tt in t.Values) { this.PushIndent("\t"); #>
<#= tt.Name #> = <#= tt.Number #>,
<#    this.PopIndent(); } #>
}
<# this.PopIndent(); }
   foreach (var message in messages) { 
     if (message.Name.EndsWith("_nullable"))
       continue;
     this.MessageDoc = JsonDoc.Files[root.Name].Messages[message.Name];
     this.PushIndent("\t");
#>
<#= this.MessageDoc.Comments #>
public partial interface I<#= message.Name.ToNameCs() #><# if (MessageDoc.IsDefaultBase) { #> : IValidatableWithSeverity, IGuid, IName<# } #>  // <#=Helper.FilePos() #>
{
<#    foreach (var field in message.Fields.InDeclarationOrder()) { 
         this.FieldDoc = JsonDoc.Files[root.Name].Messages[message.Name].Fields[field.Name]; #>
<# if (MessageDoc.IsDefaultBase) {
     if (field.Name=="guid") continue;
     if (field.Name=="name") continue;
   } this.PushIndent("\t"); #>
<#= this.FieldDoc.Comments #><# if (field.IsRepeated) { #>
<# if (field.IsCsSimple()) { #>
IEnumerable<<#= field.ToTypeCs() #>> <#= field.Name.ToNameCs() #>I { get; } // <#=Helper.FilePos() #>
<# } else { #>
IEnumerable<I<#= field.ToTypeCs() #>> <#= field.Name.ToNameCs() #>I { get; } // <#=Helper.FilePos() #>
<# } #>
<#       } else if (field.IsCsSimple()) { #>
<#= field.ToTypeCs() #> <#= field.Name.ToNameCs() #> { get; } // <#=Helper.FilePos() #>
<#       } else { #>
I<#= field.ToTypeCs() #> <#= field.Name.ToNameCs() #>I { get; } // <#=Helper.FilePos() #>
<#       } #>
<#       this.PopIndent();
      } #>
}
<#    
      this.PopIndent();
   } 
#>
}