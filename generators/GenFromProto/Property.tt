<#@ template language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="vSharpStudio.proto" #>
<#= field.Declaration.ToLeadingComments() #>
<# if (field.IsRepeated) { #>
public ObservableCollection<<#= field.MessageType.Name.ToNameCs() #>> <#= field.Name.ToNameCs() #> { get; set; }
<# } else if (field.FieldType == Google.Protobuf.Reflection.FieldType.Enum) { #>
public <#= message.Name #>.Types.<#= field.ToTypeCs() #> <#= field.Name.ToNameCs() #>
{ 
	set
	{
		if (_<#= field.Name.ToNameCs() #> != value)
		{
			On<#= field.Name.ToNameCs() #>Changing();
			_<#= field.Name.ToNameCs() #> = value;
			On<#= field.Name.ToNameCs() #>Changed();
			NotifyPropertyChanged();
			ValidateProperty();
		}
	}
	get { return _<#= field.Name.ToNameCs() #>; }
}
private <#= message.Name #>.Types.<#= field.ToTypeCs() #> _<#= field.Name.ToNameCs() #>;
<# } else if (field.FieldType == Google.Protobuf.Reflection.FieldType.Message) {#>
public <#= field.ToTypeCs() #> <#= field.Name.ToNameCs() #>
{ 
	set
	{
		if (_<#= field.Name.ToNameCs() #> != value)
		{
			On<#= field.Name.ToNameCs() #>Changing();
            _<#= field.Name.ToNameCs() #> = value;
			On<#= field.Name.ToNameCs() #>Changed();
			NotifyPropertyChanged();
			ValidateProperty();
		}
	}
	get { return _<#= field.Name.ToNameCs() #>; }
}
private <#= field.ToTypeCs() #> _<#= field.Name.ToNameCs() #>;
<# } else { #>
public <#= field.ToTypeCs() #> <#= field.Name.ToNameCs() #>
{ 
	set
	{
		if (_<#= field.Name.ToNameCs() #> != value)
		{
			On<#= field.Name.ToNameCs() #>Changing();
			_<#= field.Name.ToNameCs() #> = value;
			On<#= field.Name.ToNameCs() #>Changed();
			NotifyPropertyChanged();
			ValidateProperty();
		}
	}
	get { return _<#= field.Name.ToNameCs() #>; }
}
private <#= field.ToTypeCs() #> _<#= field.Name.ToNameCs() #>;
<# } #>
partial void On<#= field.Name.ToNameCs() #>Changing();
partial void On<#= field.Name.ToNameCs() #>Changed();
<#= field.Declaration.ToTrailingComments("") #>