<#@ template language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="vSharpStudio.proto" #>
<#= message.Declaration.ToLeadingComments() #>
public partial class <#= message.Name.ToNameCs() #> : ViewModelValidatable<<#= message.Name.ToNameCs() #>, <#= message.Name.ToNameCs() #>.<#= message.Name.ToNameCs() #>Validator>
{
<#= message.Declaration.ToTrailingComments("\t") #>
	public partial class <#= message.Name.ToNameCs() #>Validator : ValidatorBase<<#= message.Name.ToNameCs() #>, <#= message.Name.ToNameCs() #>Validator> { }
	#region CTOR
	public <#= message.Name.ToNameCs() #>() : base(<#= message.Name.ToNameCs() #>Validator.Validator)
	{
		this._dto = new <#= message.Name #>();
<# foreach (var t in message.Fields.InDeclarationOrder())	{ 
     if (t.FieldType == Google.Protobuf.Reflection.FieldType.Message && t.MessageType.Name.EndsWith("_nullable"))
       continue;
		if (t.IsRepeated) {#>
		this.<#= t.Name.ToNameCs() #> = new ObservableCollection<<#= t.MessageType.Name.ToNameCs() #>>();
		this.<#= t.Name.ToNameCs() #>.CollectionChanged += <#= t.Name.ToNameCs() #>_CollectionChanged;
<#		} else if (t.FieldType == Google.Protobuf.Reflection.FieldType.Message) { #>
		this.<#= t.Name.ToNameCs() #> = new <#= t.MessageType.Name.ToNameCs() #>();
<#		} else if (t.IsMap) { #>
		map???
<#		} #>
<# } #>
		OnInit();
	}
<# foreach (var t in message.Fields.InDeclarationOrder()) { if (!t.IsRepeated) continue; #>
	private void <#= t.Name.ToNameCs() #>_CollectionChanged(object sender, System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
	{
		if (e.NewItems.Count > 0)
		{
			string bname = "<#= t.MessageType.Name.ToNameCs() #>";
			int i = 0;
			foreach (var tt in this.<#= t.Name.ToNameCs() #>)
			{
				if (tt.Name.StartsWith(bname))
				{
					string s = tt.Name.Remove(0, bname.Length);
					int ii;
					if (int.TryParse(s, out ii))
					{
						if (ii > i) i = ii;
					}
				}
			}
			foreach (var t in e.NewItems)
			{
				i++;
				(t as <#= t.MessageType.Name.ToNameCs() #>).Name = bname + i;
			}
		}
	}
<# } #>
	public <#= message.Name.ToNameCs() #>(<#= message.Name #> dto) : base(<#= message.Name.ToNameCs() #>Validator.Validator)
	{
		this._dto = dto;
		this.initFromDto();
		OnInitFromDto();
	}
	private void initFromDto()
	{
<# foreach (var t in message.Fields.InDeclarationOrder())	{ 
		if (t.IsRepeated) {#>
		this.<#= t.Name.ToNameCs() #> = new ObservableCollection<<#= t.MessageType.Name.ToNameCs() #>>();
		foreach (var t in _dto.<#= t.Name.ToNameCs() #>)
		{
			this.<#= t.Name.ToNameCs() #>.Add(new <#= t.MessageType.Name.ToNameCs() #>(t));
		}
		this.<#= t.Name.ToNameCs() #>.CollectionChanged += <#= t.Name.ToNameCs() #>_CollectionChanged;
<#      } else if (t.FieldType == Google.Protobuf.Reflection.FieldType.Message && t.MessageType.Name.EndsWith("_nullable")) {#>
		this.<#= t.Name.ToNameCs() #> = _dto.<#= t.Name.ToNameCs() #>.HasValue ? _dto.<#= t.Name.ToNameCs() #>.Value : (<#= t.ToTypeCs() #>)null;
<#		} else if (t.FieldType == Google.Protobuf.Reflection.FieldType.Message) { #>
		this.<#= t.Name.ToNameCs() #> = new <#= t.MessageType.Name.ToNameCs() #>(_dto.<#= t.Name.ToNameCs() #>);
<#		} else if (t.IsMap) { #>
		map???
<#		} #>
<# } #>
	}
	private <#= message.Name #> _dto;
	partial void OnInit();
	partial void OnInitFromDto();
	#endregion CTOR
	#region Procedures
<#	
	this.PushIndent("\t");
	var cloner = new Clone(root, message);
	this.Write(cloner.TransformText());

	var va = new VisitorAccept(root, message);
	this.Write(va.TransformText());
	this.PopIndent(); #>
	#endregion Procedures
	#region Properties
<#	this.PushIndent("\t");
	foreach (var t in message.Fields.InDeclarationOrder())
	{
		var p = new Property(root, message, t);
		this.Write(p.TransformText());
	}
	this.PopIndent();
#>
	#endregion Properties
}
