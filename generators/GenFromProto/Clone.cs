// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version: 15.0.0.0
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
namespace GenFromProto
{
    using System.Linq;
    using System.Text;
    using System.Collections.Generic;
    using System;
    
    /// <summary>
    /// Class to produce the template output
    /// </summary>
    
    #line 1 "C:\dev\vsharpstudio\generators\GenFromProto\Clone.tt"
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "15.0.0.0")]
    public partial class Clone : CloneBase
    {
#line hidden
        /// <summary>
        /// Create the template output
        /// </summary>
        public virtual string TransformText()
        {
            this.Write("public static ");
            
            #line 6 "C:\dev\vsharpstudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(message.Name.ToNameCs()));
            
            #line default
            #line hidden
            this.Write(" Clone(");
            
            #line 6 "C:\dev\vsharpstudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(message.Name.ToNameCs()));
            
            #line default
            #line hidden
            this.Write(" from, bool isDeep = true)\r\n{\r\n    ");
            
            #line 8 "C:\dev\vsharpstudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(message.Name.ToNameCs()));
            
            #line default
            #line hidden
            this.Write(" vm = new ");
            
            #line 8 "C:\dev\vsharpstudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(message.Name.ToNameCs()));
            
            #line default
            #line hidden
            this.Write("();\r\n");
            
            #line 9 "C:\dev\vsharpstudio\generators\GenFromProto\Clone.tt"
    foreach (var field in message.Fields.InDeclarationOrder()) { 
            
            #line default
            #line hidden
            
            #line 10 "C:\dev\vsharpstudio\generators\GenFromProto\Clone.tt"
      if (field.IsRepeated) { 
            
            #line default
            #line hidden
            this.Write("    vm.");
            
            #line 11 "C:\dev\vsharpstudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(field.Name.ToNameCs()));
            
            #line default
            #line hidden
            this.Write(" = new ObservableCollection<");
            
            #line 11 "C:\dev\vsharpstudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(field.ToTypeCs()));
            
            #line default
            #line hidden
            this.Write(">();\r\n    foreach(var t in from.");
            
            #line 12 "C:\dev\vsharpstudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(field.Name.ToNameCs()));
            
            #line default
            #line hidden
            this.Write(")\r\n        vm.");
            
            #line 13 "C:\dev\vsharpstudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(field.Name.ToNameCs()));
            
            #line default
            #line hidden
            this.Write(".Add(");
            
            #line 13 "C:\dev\vsharpstudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(field.ToTypeCs()));
            
            #line default
            #line hidden
            this.Write(".Clone(t, isDeep));\r\n");
            
            #line 14 "C:\dev\vsharpstudio\generators\GenFromProto\Clone.tt"
      } else if (field.FieldType == Google.Protobuf.Reflection.FieldType.Message && field.MessageType.Name == "string_nullable") { 
            
            #line default
            #line hidden
            this.Write("    vm.");
            
            #line 15 "C:\dev\vsharpstudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(field.Name.ToNameCs()));
            
            #line default
            #line hidden
            this.Write(" = from.");
            
            #line 15 "C:\dev\vsharpstudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(field.Name.ToNameCs()));
            
            #line default
            #line hidden
            this.Write(";\r\n");
            
            #line 16 "C:\dev\vsharpstudio\generators\GenFromProto\Clone.tt"
      } else if (field.FieldType == Google.Protobuf.Reflection.FieldType.Message && field.MessageType.Name.EndsWith("_nullable")) { 
            
            #line default
            #line hidden
            this.Write("    vm.");
            
            #line 17 "C:\dev\vsharpstudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(field.Name.ToNameCs()));
            
            #line default
            #line hidden
            this.Write(" = from.");
            
            #line 17 "C:\dev\vsharpstudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(field.Name.ToNameCs()));
            
            #line default
            #line hidden
            this.Write(".HasValue ? from.");
            
            #line 17 "C:\dev\vsharpstudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(field.Name.ToNameCs()));
            
            #line default
            #line hidden
            this.Write(".Value : (");
            
            #line 17 "C:\dev\vsharpstudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(field.ToTypeCs()));
            
            #line default
            #line hidden
            this.Write(")null;\r\n");
            
            #line 18 "C:\dev\vsharpstudio\generators\GenFromProto\Clone.tt"
      } else if (field.FieldType == Google.Protobuf.Reflection.FieldType.Message) { 
            
            #line default
            #line hidden
            this.Write("    if (isDeep)\r\n        vm.");
            
            #line 20 "C:\dev\vsharpstudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(field.Name.ToNameCs()));
            
            #line default
            #line hidden
            this.Write(" = ");
            
            #line 20 "C:\dev\vsharpstudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(field.ToTypeCs()));
            
            #line default
            #line hidden
            this.Write(".Clone(from.");
            
            #line 20 "C:\dev\vsharpstudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(field.Name.ToNameCs()));
            
            #line default
            #line hidden
            this.Write(", isDeep);\r\n");
            
            #line 21 "C:\dev\vsharpstudio\generators\GenFromProto\Clone.tt"
      } else { 
            
            #line default
            #line hidden
            this.Write("    vm.");
            
            #line 22 "C:\dev\vsharpstudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(field.Name.ToNameCs()));
            
            #line default
            #line hidden
            this.Write(" = from.");
            
            #line 22 "C:\dev\vsharpstudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(field.Name.ToNameCs()));
            
            #line default
            #line hidden
            this.Write(";\r\n");
            
            #line 23 "C:\dev\vsharpstudio\generators\GenFromProto\Clone.tt"
      } 
     } 
     
            
            #line default
            #line hidden
            this.Write("    return vm;\r\n}\r\npublic static void Update(");
            
            #line 28 "C:\dev\vsharpstudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(message.Name.ToNameCs()));
            
            #line default
            #line hidden
            this.Write(" to, ");
            
            #line 28 "C:\dev\vsharpstudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(message.Name.ToNameCs()));
            
            #line default
            #line hidden
            this.Write(" from, bool isDeep = true)\r\n{\r\n");
            
            #line 30 "C:\dev\vsharpstudio\generators\GenFromProto\Clone.tt"
    foreach (var field in message.Fields.InDeclarationOrder()) { 
            
            #line default
            #line hidden
            
            #line 31 "C:\dev\vsharpstudio\generators\GenFromProto\Clone.tt"
      if (field.IsRepeated) { 
            
            #line default
            #line hidden
            this.Write("    if (isDeep)\r\n    {\r\n        foreach(var t in to.");
            
            #line 34 "C:\dev\vsharpstudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(field.Name.ToNameCs()));
            
            #line default
            #line hidden
            this.Write(".ToList())\r\n        {\r\n            bool isfound = false;\r\n            foreach(var" +
                    " tt in from.");
            
            #line 37 "C:\dev\vsharpstudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(field.Name.ToNameCs()));
            
            #line default
            #line hidden
            this.Write(")\r\n            {\r\n                if (t == tt)\r\n                {\r\n              " +
                    "      isfound = true;\r\n                    ");
            
            #line 42 "C:\dev\vsharpstudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(field.ToTypeCs()));
            
            #line default
            #line hidden
            this.Write(".Update(t, tt, isDeep);\r\n                    break;\r\n                }\r\n         " +
                    "   }\r\n            if (!isfound)\r\n                to.");
            
            #line 47 "C:\dev\vsharpstudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(field.Name.ToNameCs()));
            
            #line default
            #line hidden
            this.Write(".Remove(t);\r\n        }\r\n        foreach(var tt in from.");
            
            #line 49 "C:\dev\vsharpstudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(field.Name.ToNameCs()));
            
            #line default
            #line hidden
            this.Write(")\r\n        {\r\n            bool isfound = false;\r\n            foreach(var t in to." +
                    "");
            
            #line 52 "C:\dev\vsharpstudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(field.Name.ToNameCs()));
            
            #line default
            #line hidden
            this.Write(".ToList())\r\n            {\r\n                if (t == tt)\r\n                {\r\n     " +
                    "               isfound = true;\r\n                    break;\r\n                }\r\n " +
                    "           }\r\n            if (!isfound)\r\n            {\r\n                var p = " +
                    "new ");
            
            #line 62 "C:\dev\vsharpstudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(field.ToTypeCs()));
            
            #line default
            #line hidden
            this.Write("(to.ValidationCollection);\r\n                ");
            
            #line 63 "C:\dev\vsharpstudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(field.ToTypeCs()));
            
            #line default
            #line hidden
            this.Write(".Update(p, tt, isDeep);\r\n                to.");
            
            #line 64 "C:\dev\vsharpstudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(field.Name.ToNameCs()));
            
            #line default
            #line hidden
            this.Write(".Add(p);\r\n            }\r\n        }\r\n    }\r\n");
            
            #line 68 "C:\dev\vsharpstudio\generators\GenFromProto\Clone.tt"
      } else if (field.FieldType == Google.Protobuf.Reflection.FieldType.Message && field.MessageType.Name == "string_nullable") { 
            
            #line default
            #line hidden
            this.Write("    to.");
            
            #line 69 "C:\dev\vsharpstudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(field.Name.ToNameCs()));
            
            #line default
            #line hidden
            this.Write(" = from.");
            
            #line 69 "C:\dev\vsharpstudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(field.Name.ToNameCs()));
            
            #line default
            #line hidden
            this.Write(";\r\n");
            
            #line 70 "C:\dev\vsharpstudio\generators\GenFromProto\Clone.tt"
      } else if (field.FieldType == Google.Protobuf.Reflection.FieldType.Message && field.MessageType.Name.EndsWith("_nullable")) { 
            
            #line default
            #line hidden
            this.Write("    to.");
            
            #line 71 "C:\dev\vsharpstudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(field.Name.ToNameCs()));
            
            #line default
            #line hidden
            this.Write(" = from.");
            
            #line 71 "C:\dev\vsharpstudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(field.Name.ToNameCs()));
            
            #line default
            #line hidden
            this.Write(".HasValue ? from.");
            
            #line 71 "C:\dev\vsharpstudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(field.Name.ToNameCs()));
            
            #line default
            #line hidden
            this.Write(".Value : (");
            
            #line 71 "C:\dev\vsharpstudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(field.ToTypeCs()));
            
            #line default
            #line hidden
            this.Write(")null;\r\n");
            
            #line 72 "C:\dev\vsharpstudio\generators\GenFromProto\Clone.tt"
      } else if (field.FieldType == Google.Protobuf.Reflection.FieldType.Message) { 
            
            #line default
            #line hidden
            this.Write("    if (isDeep)\r\n        ");
            
            #line 74 "C:\dev\vsharpstudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(field.ToTypeCs()));
            
            #line default
            #line hidden
            this.Write(".Update(to.");
            
            #line 74 "C:\dev\vsharpstudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(field.Name.ToNameCs()));
            
            #line default
            #line hidden
            this.Write(", from.");
            
            #line 74 "C:\dev\vsharpstudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(field.Name.ToNameCs()));
            
            #line default
            #line hidden
            this.Write(", isDeep);\r\n");
            
            #line 75 "C:\dev\vsharpstudio\generators\GenFromProto\Clone.tt"
      } else { 
            
            #line default
            #line hidden
            this.Write("    to.");
            
            #line 76 "C:\dev\vsharpstudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(field.Name.ToNameCs()));
            
            #line default
            #line hidden
            this.Write(" = from.");
            
            #line 76 "C:\dev\vsharpstudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(field.Name.ToNameCs()));
            
            #line default
            #line hidden
            this.Write(";\r\n");
            
            #line 77 "C:\dev\vsharpstudio\generators\GenFromProto\Clone.tt"
      } 
     } 
     
            
            #line default
            #line hidden
            this.Write("}\r\n#region IEditable\r\npublic override ");
            
            #line 82 "C:\dev\vsharpstudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(message.Name.ToNameCs()));
            
            #line default
            #line hidden
            this.Write(" Backup()\r\n{\r\n    bool isDeep = true;\r\n    OnBackupObjectStarting(ref isDeep);\r\n\t" +
                    "return ");
            
            #line 86 "C:\dev\vsharpstudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(message.Name.ToNameCs()));
            
            #line default
            #line hidden
            this.Write(".Clone(this);\r\n}\r\npartial void OnBackupObjectStarting(ref bool isDeep);\r\npublic o" +
                    "verride void Restore(");
            
            #line 89 "C:\dev\vsharpstudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(message.Name.ToNameCs()));
            
            #line default
            #line hidden
            this.Write(" from)\r\n{\r\n    bool isDeep = true;\r\n    OnRestoreObjectStarting(ref isDeep);\r\n   " +
                    " ");
            
            #line 93 "C:\dev\vsharpstudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(message.Name.ToNameCs()));
            
            #line default
            #line hidden
            this.Write(".Update(this, from, isDeep);\r\n}\r\npartial void OnRestoreObjectStarting(ref bool is" +
                    "Deep);\r\n#endregion IEditable\r\n// Conversion from \'");
            
            #line 97 "C:\dev\vsharpstudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(message.Name));
            
            #line default
            #line hidden
            this.Write("\' to \'");
            
            #line 97 "C:\dev\vsharpstudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(message.Name.ToNameCs()));
            
            #line default
            #line hidden
            this.Write("\'\r\npublic static ");
            
            #line 98 "C:\dev\vsharpstudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(message.Name.ToNameCs()));
            
            #line default
            #line hidden
            this.Write(" ConvertToVM(");
            
            #line 98 "C:\dev\vsharpstudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(message.Name));
            
            #line default
            #line hidden
            this.Write(" m, SortedObservableCollection<ValidationMessage> validationCollection = null, ");
            
            #line 98 "C:\dev\vsharpstudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(message.Name.ToNameCs()));
            
            #line default
            #line hidden
            this.Write(" vm = null)\r\n{\r\n    if (vm == null)\r\n        vm = new ");
            
            #line 101 "C:\dev\vsharpstudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(message.Name.ToNameCs()));
            
            #line default
            #line hidden
            this.Write("(validationCollection);\r\n");
            
            #line 102 "C:\dev\vsharpstudio\generators\GenFromProto\Clone.tt"
    foreach (var field in message.Fields.InDeclarationOrder()) { 
            
            #line default
            #line hidden
            
            #line 103 "C:\dev\vsharpstudio\generators\GenFromProto\Clone.tt"
      if (field.IsRepeated) { 
            
            #line default
            #line hidden
            this.Write("    vm.");
            
            #line 104 "C:\dev\vsharpstudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(field.Name.ToNameCs()));
            
            #line default
            #line hidden
            this.Write(" = new ObservableCollection<");
            
            #line 104 "C:\dev\vsharpstudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(field.ToTypeCs()));
            
            #line default
            #line hidden
            this.Write(">();\r\n    foreach(var t in m.");
            
            #line 105 "C:\dev\vsharpstudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(field.Name.ToNameCs()));
            
            #line default
            #line hidden
            this.Write(")\r\n        vm.");
            
            #line 106 "C:\dev\vsharpstudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(field.Name.ToNameCs()));
            
            #line default
            #line hidden
            this.Write(".Add(");
            
            #line 106 "C:\dev\vsharpstudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(field.ToTypeCs()));
            
            #line default
            #line hidden
            this.Write(".ConvertToVM(t));\r\n");
            
            #line 107 "C:\dev\vsharpstudio\generators\GenFromProto\Clone.tt"
      } else if (field.FieldType == Google.Protobuf.Reflection.FieldType.Message && field.MessageType.Name == "string_nullable") { 
            
            #line default
            #line hidden
            this.Write("    vm.");
            
            #line 108 "C:\dev\vsharpstudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(field.Name.ToNameCs()));
            
            #line default
            #line hidden
            this.Write(" = m.");
            
            #line 108 "C:\dev\vsharpstudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(field.Name.ToNameCs()));
            
            #line default
            #line hidden
            this.Write(".HasValue ? m.");
            
            #line 108 "C:\dev\vsharpstudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(field.Name.ToNameCs()));
            
            #line default
            #line hidden
            this.Write(".Value : \"\";\r\n");
            
            #line 109 "C:\dev\vsharpstudio\generators\GenFromProto\Clone.tt"
      } else if (field.FieldType == Google.Protobuf.Reflection.FieldType.Message && field.MessageType.Name.EndsWith("_nullable")) { 
            
            #line default
            #line hidden
            this.Write("    vm.");
            
            #line 110 "C:\dev\vsharpstudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(field.Name.ToNameCs()));
            
            #line default
            #line hidden
            this.Write(" = m.");
            
            #line 110 "C:\dev\vsharpstudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(field.Name.ToNameCs()));
            
            #line default
            #line hidden
            this.Write(".HasValue ? m.");
            
            #line 110 "C:\dev\vsharpstudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(field.Name.ToNameCs()));
            
            #line default
            #line hidden
            this.Write(".Value : (");
            
            #line 110 "C:\dev\vsharpstudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(field.ToTypeCs()));
            
            #line default
            #line hidden
            this.Write(")null;\r\n");
            
            #line 111 "C:\dev\vsharpstudio\generators\GenFromProto\Clone.tt"
      } else if (field.FieldType == Google.Protobuf.Reflection.FieldType.Message) { 
            
            #line default
            #line hidden
            this.Write("    vm.");
            
            #line 112 "C:\dev\vsharpstudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(field.Name.ToNameCs()));
            
            #line default
            #line hidden
            this.Write(" = ");
            
            #line 112 "C:\dev\vsharpstudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(field.ToTypeCs()));
            
            #line default
            #line hidden
            this.Write(".ConvertToVM(m.");
            
            #line 112 "C:\dev\vsharpstudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(field.Name.ToNameCs()));
            
            #line default
            #line hidden
            this.Write(");\r\n");
            
            #line 113 "C:\dev\vsharpstudio\generators\GenFromProto\Clone.tt"
      } else { 
            
            #line default
            #line hidden
            this.Write("    vm.");
            
            #line 114 "C:\dev\vsharpstudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(field.Name.ToNameCs()));
            
            #line default
            #line hidden
            this.Write(" = m.");
            
            #line 114 "C:\dev\vsharpstudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(field.Name.ToNameCs()));
            
            #line default
            #line hidden
            this.Write(";\r\n");
            
            #line 115 "C:\dev\vsharpstudio\generators\GenFromProto\Clone.tt"
      } 
     } 
     
            
            #line default
            #line hidden
            this.Write("    vm.OnInitFromDto();\r\n    return vm;\r\n}\r\n// Conversion from \'");
            
            #line 121 "C:\dev\vsharpstudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(message.Name.ToNameCs()));
            
            #line default
            #line hidden
            this.Write("\' to \'");
            
            #line 121 "C:\dev\vsharpstudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(message.Name));
            
            #line default
            #line hidden
            this.Write("\'\r\npublic static ");
            
            #line 122 "C:\dev\vsharpstudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(message.Name));
            
            #line default
            #line hidden
            this.Write(" ConvertToProto(");
            
            #line 122 "C:\dev\vsharpstudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(message.Name.ToNameCs()));
            
            #line default
            #line hidden
            this.Write(" vm)\r\n{\r\n    ");
            
            #line 124 "C:\dev\vsharpstudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(message.Name));
            
            #line default
            #line hidden
            this.Write(" m = new ");
            
            #line 124 "C:\dev\vsharpstudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(message.Name));
            
            #line default
            #line hidden
            this.Write("();\r\n");
            
            #line 125 "C:\dev\vsharpstudio\generators\GenFromProto\Clone.tt"
    foreach (var field in message.Fields.InDeclarationOrder()) { 
            
            #line default
            #line hidden
            
            #line 126 "C:\dev\vsharpstudio\generators\GenFromProto\Clone.tt"
      if (field.IsRepeated) { 
            
            #line default
            #line hidden
            this.Write("    foreach(var t in vm.");
            
            #line 127 "C:\dev\vsharpstudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(field.Name.ToNameCs()));
            
            #line default
            #line hidden
            this.Write(")\r\n        m.");
            
            #line 128 "C:\dev\vsharpstudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(field.Name.ToNameCs()));
            
            #line default
            #line hidden
            this.Write(".Add(");
            
            #line 128 "C:\dev\vsharpstudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(field.ToTypeCs()));
            
            #line default
            #line hidden
            this.Write(".ConvertToProto(t));\r\n");
            
            #line 129 "C:\dev\vsharpstudio\generators\GenFromProto\Clone.tt"
      } else if (field.FieldType == Google.Protobuf.Reflection.FieldType.Message && field.MessageType.Name == "string_nullable") { 
            
            #line default
            #line hidden
            this.Write("    m.");
            
            #line 130 "C:\dev\vsharpstudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(field.Name.ToNameCs()));
            
            #line default
            #line hidden
            this.Write(".Value = string.IsNullOrEmpty(vm.");
            
            #line 130 "C:\dev\vsharpstudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(field.Name.ToNameCs()));
            
            #line default
            #line hidden
            this.Write(") ? \"\" : vm.");
            
            #line 130 "C:\dev\vsharpstudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(field.Name.ToNameCs()));
            
            #line default
            #line hidden
            this.Write(";\r\n    m.");
            
            #line 131 "C:\dev\vsharpstudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(field.Name.ToNameCs()));
            
            #line default
            #line hidden
            this.Write(".HasValue = !string.IsNullOrEmpty(vm.");
            
            #line 131 "C:\dev\vsharpstudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(field.Name.ToNameCs()));
            
            #line default
            #line hidden
            this.Write(");\r\n");
            
            #line 132 "C:\dev\vsharpstudio\generators\GenFromProto\Clone.tt"
      } else if (field.FieldType == Google.Protobuf.Reflection.FieldType.Message && field.MessageType.Name.EndsWith("_nullable")) { 
            
            #line default
            #line hidden
            this.Write("    m.");
            
            #line 133 "C:\dev\vsharpstudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(field.Name.ToNameCs()));
            
            #line default
            #line hidden
            this.Write(".Value = vm.");
            
            #line 133 "C:\dev\vsharpstudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(field.Name.ToNameCs()));
            
            #line default
            #line hidden
            this.Write(".Value;\r\n    m.");
            
            #line 134 "C:\dev\vsharpstudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(field.Name.ToNameCs()));
            
            #line default
            #line hidden
            this.Write(".HasValue = vm.");
            
            #line 134 "C:\dev\vsharpstudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(field.Name.ToNameCs()));
            
            #line default
            #line hidden
            this.Write(".HasValue;\r\n");
            
            #line 135 "C:\dev\vsharpstudio\generators\GenFromProto\Clone.tt"
      } else if (field.FieldType == Google.Protobuf.Reflection.FieldType.Message) { 
            
            #line default
            #line hidden
            this.Write("    m.");
            
            #line 136 "C:\dev\vsharpstudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(field.Name.ToNameCs()));
            
            #line default
            #line hidden
            this.Write(" = ");
            
            #line 136 "C:\dev\vsharpstudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(field.ToTypeCs()));
            
            #line default
            #line hidden
            this.Write(".ConvertToProto(vm.");
            
            #line 136 "C:\dev\vsharpstudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(field.Name.ToNameCs()));
            
            #line default
            #line hidden
            this.Write(");\r\n");
            
            #line 137 "C:\dev\vsharpstudio\generators\GenFromProto\Clone.tt"
      } else { 
            
            #line default
            #line hidden
            this.Write("    m.");
            
            #line 138 "C:\dev\vsharpstudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(field.Name.ToNameCs()));
            
            #line default
            #line hidden
            this.Write(" = vm.");
            
            #line 138 "C:\dev\vsharpstudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(field.Name.ToNameCs()));
            
            #line default
            #line hidden
            this.Write(";\r\n");
            
            #line 139 "C:\dev\vsharpstudio\generators\GenFromProto\Clone.tt"
      } 
     } 
     
            
            #line default
            #line hidden
            this.Write("    return m;\r\n}\r\n");
            return this.GenerationEnvironment.ToString();
        }
    }
    
    #line default
    #line hidden
    #region Base class
    /// <summary>
    /// Base class for this transformation
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "15.0.0.0")]
    public class CloneBase
    {
        #region Fields
        private global::System.Text.StringBuilder generationEnvironmentField;
        private global::System.CodeDom.Compiler.CompilerErrorCollection errorsField;
        private global::System.Collections.Generic.List<int> indentLengthsField;
        private string currentIndentField = "";
        private bool endsWithNewline;
        private global::System.Collections.Generic.IDictionary<string, object> sessionField;
        #endregion
        #region Properties
        /// <summary>
        /// The string builder that generation-time code is using to assemble generated output
        /// </summary>
        protected System.Text.StringBuilder GenerationEnvironment
        {
            get
            {
                if ((this.generationEnvironmentField == null))
                {
                    this.generationEnvironmentField = new global::System.Text.StringBuilder();
                }
                return this.generationEnvironmentField;
            }
            set
            {
                this.generationEnvironmentField = value;
            }
        }
        /// <summary>
        /// The error collection for the generation process
        /// </summary>
        public System.CodeDom.Compiler.CompilerErrorCollection Errors
        {
            get
            {
                if ((this.errorsField == null))
                {
                    this.errorsField = new global::System.CodeDom.Compiler.CompilerErrorCollection();
                }
                return this.errorsField;
            }
        }
        /// <summary>
        /// A list of the lengths of each indent that was added with PushIndent
        /// </summary>
        private System.Collections.Generic.List<int> indentLengths
        {
            get
            {
                if ((this.indentLengthsField == null))
                {
                    this.indentLengthsField = new global::System.Collections.Generic.List<int>();
                }
                return this.indentLengthsField;
            }
        }
        /// <summary>
        /// Gets the current indent we use when adding lines to the output
        /// </summary>
        public string CurrentIndent
        {
            get
            {
                return this.currentIndentField;
            }
        }
        /// <summary>
        /// Current transformation session
        /// </summary>
        public virtual global::System.Collections.Generic.IDictionary<string, object> Session
        {
            get
            {
                return this.sessionField;
            }
            set
            {
                this.sessionField = value;
            }
        }
        #endregion
        #region Transform-time helpers
        /// <summary>
        /// Write text directly into the generated output
        /// </summary>
        public void Write(string textToAppend)
        {
            if (string.IsNullOrEmpty(textToAppend))
            {
                return;
            }
            // If we're starting off, or if the previous text ended with a newline,
            // we have to append the current indent first.
            if (((this.GenerationEnvironment.Length == 0) 
                        || this.endsWithNewline))
            {
                this.GenerationEnvironment.Append(this.currentIndentField);
                this.endsWithNewline = false;
            }
            // Check if the current text ends with a newline
            if (textToAppend.EndsWith(global::System.Environment.NewLine, global::System.StringComparison.CurrentCulture))
            {
                this.endsWithNewline = true;
            }
            // This is an optimization. If the current indent is "", then we don't have to do any
            // of the more complex stuff further down.
            if ((this.currentIndentField.Length == 0))
            {
                this.GenerationEnvironment.Append(textToAppend);
                return;
            }
            // Everywhere there is a newline in the text, add an indent after it
            textToAppend = textToAppend.Replace(global::System.Environment.NewLine, (global::System.Environment.NewLine + this.currentIndentField));
            // If the text ends with a newline, then we should strip off the indent added at the very end
            // because the appropriate indent will be added when the next time Write() is called
            if (this.endsWithNewline)
            {
                this.GenerationEnvironment.Append(textToAppend, 0, (textToAppend.Length - this.currentIndentField.Length));
            }
            else
            {
                this.GenerationEnvironment.Append(textToAppend);
            }
        }
        /// <summary>
        /// Write text directly into the generated output
        /// </summary>
        public void WriteLine(string textToAppend)
        {
            this.Write(textToAppend);
            this.GenerationEnvironment.AppendLine();
            this.endsWithNewline = true;
        }
        /// <summary>
        /// Write formatted text directly into the generated output
        /// </summary>
        public void Write(string format, params object[] args)
        {
            this.Write(string.Format(global::System.Globalization.CultureInfo.CurrentCulture, format, args));
        }
        /// <summary>
        /// Write formatted text directly into the generated output
        /// </summary>
        public void WriteLine(string format, params object[] args)
        {
            this.WriteLine(string.Format(global::System.Globalization.CultureInfo.CurrentCulture, format, args));
        }
        /// <summary>
        /// Raise an error
        /// </summary>
        public void Error(string message)
        {
            System.CodeDom.Compiler.CompilerError error = new global::System.CodeDom.Compiler.CompilerError();
            error.ErrorText = message;
            this.Errors.Add(error);
        }
        /// <summary>
        /// Raise a warning
        /// </summary>
        public void Warning(string message)
        {
            System.CodeDom.Compiler.CompilerError error = new global::System.CodeDom.Compiler.CompilerError();
            error.ErrorText = message;
            error.IsWarning = true;
            this.Errors.Add(error);
        }
        /// <summary>
        /// Increase the indent
        /// </summary>
        public void PushIndent(string indent)
        {
            if ((indent == null))
            {
                throw new global::System.ArgumentNullException("indent");
            }
            this.currentIndentField = (this.currentIndentField + indent);
            this.indentLengths.Add(indent.Length);
        }
        /// <summary>
        /// Remove the last indent that was added with PushIndent
        /// </summary>
        public string PopIndent()
        {
            string returnValue = "";
            if ((this.indentLengths.Count > 0))
            {
                int indentLength = this.indentLengths[(this.indentLengths.Count - 1)];
                this.indentLengths.RemoveAt((this.indentLengths.Count - 1));
                if ((indentLength > 0))
                {
                    returnValue = this.currentIndentField.Substring((this.currentIndentField.Length - indentLength));
                    this.currentIndentField = this.currentIndentField.Remove((this.currentIndentField.Length - indentLength));
                }
            }
            return returnValue;
        }
        /// <summary>
        /// Remove any indentation
        /// </summary>
        public void ClearIndent()
        {
            this.indentLengths.Clear();
            this.currentIndentField = "";
        }
        #endregion
        #region ToString Helpers
        /// <summary>
        /// Utility class to produce culture-oriented representation of an object as a string.
        /// </summary>
        public class ToStringInstanceHelper
        {
            private System.IFormatProvider formatProviderField  = global::System.Globalization.CultureInfo.InvariantCulture;
            /// <summary>
            /// Gets or sets format provider to be used by ToStringWithCulture method.
            /// </summary>
            public System.IFormatProvider FormatProvider
            {
                get
                {
                    return this.formatProviderField ;
                }
                set
                {
                    if ((value != null))
                    {
                        this.formatProviderField  = value;
                    }
                }
            }
            /// <summary>
            /// This is called from the compile/run appdomain to convert objects within an expression block to a string
            /// </summary>
            public string ToStringWithCulture(object objectToConvert)
            {
                if ((objectToConvert == null))
                {
                    throw new global::System.ArgumentNullException("objectToConvert");
                }
                System.Type t = objectToConvert.GetType();
                System.Reflection.MethodInfo method = t.GetMethod("ToString", new System.Type[] {
                            typeof(System.IFormatProvider)});
                if ((method == null))
                {
                    return objectToConvert.ToString();
                }
                else
                {
                    return ((string)(method.Invoke(objectToConvert, new object[] {
                                this.formatProviderField })));
                }
            }
        }
        private ToStringInstanceHelper toStringHelperField = new ToStringInstanceHelper();
        /// <summary>
        /// Helper to produce culture-oriented representation of an object as a string
        /// </summary>
        public ToStringInstanceHelper ToStringHelper
        {
            get
            {
                return this.toStringHelperField;
            }
        }
        #endregion
    }
    #endregion
}
