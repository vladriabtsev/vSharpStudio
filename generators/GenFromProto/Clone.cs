// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version: 16.0.0.0
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
namespace GenFromProto
{
    using System.Linq;
    using System.Text;
    using System.Collections.Generic;
    using System;
    
    /// <summary>
    /// Class to produce the template output
    /// </summary>
    
    #line 1 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "16.0.0.0")]
    public partial class Clone : CloneBase
    {
#line hidden
        /// <summary>
        /// Create the template output
        /// </summary>
        public virtual string TransformText()
        {
            
            #line 6 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
 if (this.Doc.IsDefaultBase) { 
            
            #line default
            #line hidden
            this.Write("\r\npublic override void Sort(Type type) // ");
            
            #line 8 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Helper.FilePos()));
            
            #line default
            #line hidden
            this.Write("\r\n{\r\n");
            
            #line 10 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
    int isort=0;
      foreach (var field in message.Fields.InDeclarationOrder()) {
        if (field.IsRepeated) { 
          isort++; 
            
            #line default
            #line hidden
            
            #line 14 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
 if (!field.IsAny() && field.IsMessage() && JsonDoc.Files[root.Name].Messages[field.MessageType.Name].IsDefaultBase) { 
            
            #line default
            #line hidden
            this.Write("    if (type == typeof(");
            
            #line 15 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(field.ToTypeCs()));
            
            #line default
            #line hidden
            this.Write(")) // ");
            
            #line 15 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Helper.FilePos()));
            
            #line default
            #line hidden
            this.Write("\r\n    {\r\n        this.");
            
            #line 17 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(field.Name.ToNameCs()));
            
            #line default
            #line hidden
            this.Write(".Sort();\r\n    }\r\n");
            
            #line 19 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
 } 
            
            #line default
            #line hidden
            
            #line 20 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
      }
      }
      if (isort==0) { 
            
            #line default
            #line hidden
            this.Write("    // throw new Exception();\r\n");
            
            #line 24 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
    } 
            
            #line default
            #line hidden
            this.Write("}\r\n");
            
            #line 26 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
 } 
            
            #line default
            #line hidden
            this.Write("public static ");
            
            #line 27 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(message.Name.ToNameCs()));
            
            #line default
            #line hidden
            this.Write(" Clone(");
            
            #line 27 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
 if (message.IsDefaultBase()) { 
            
            #line default
            #line hidden
            this.Write("ITreeConfigNode parent, ");
            
            #line 27 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
 } 
            
            #line default
            #line hidden
            
            #line 27 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(message.Name.ToNameCs()));
            
            #line default
            #line hidden
            this.Write(" from, bool isDeep = true");
            
            #line 27 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
 if (this.Doc.BaseClass.StartsWith(" : ConfigObjectBase")) { 
            
            #line default
            #line hidden
            this.Write(", bool isNewGuid = false");
            
            #line 27 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
 } 
            
            #line default
            #line hidden
            this.Write(") // ");
            
            #line 27 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Helper.FilePos()));
            
            #line default
            #line hidden
            this.Write("\r\n{\r\n");
            
            #line 29 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
 if (message.IsDefaultBase()) { 
            
            #line default
            #line hidden
            this.Write("    ");
            
            #line 30 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(message.Name.ToNameCs()));
            
            #line default
            #line hidden
            this.Write(" vm = new ");
            
            #line 30 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(message.Name.ToNameCs()));
            
            #line default
            #line hidden
            this.Write("(parent);\r\n");
            
            #line 31 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
 } else { 
            
            #line default
            #line hidden
            this.Write("    ");
            
            #line 32 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(message.Name.ToNameCs()));
            
            #line default
            #line hidden
            this.Write(" vm = new ");
            
            #line 32 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(message.Name.ToNameCs()));
            
            #line default
            #line hidden
            this.Write("();\r\n");
            
            #line 33 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
 } 
            
            #line default
            #line hidden
            
            #line 34 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
    foreach (var field in message.Fields.InDeclarationOrder()) { 
            
            #line default
            #line hidden
            
            #line 35 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
      if (field.IsRepeated) { 
            
            #line default
            #line hidden
            
            #line 36 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
 if (field.IsAny()) { 
            
            #line default
            #line hidden
            this.Write("    vm.");
            
            #line 37 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(field.Name.ToNameCs()));
            
            #line default
            #line hidden
            this.Write(" = new ObservableCollection<Google.Protobuf.WellKnownTypes.Any>(); // ");
            
            #line 37 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Helper.FilePos()));
            
            #line default
            #line hidden
            this.Write("\r\n    foreach (var t in from.");
            
            #line 38 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(field.Name.ToNameCs()));
            
            #line default
            #line hidden
            this.Write(") \r\n        vm.");
            
            #line 39 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(field.Name.ToNameCs()));
            
            #line default
            #line hidden
            this.Write(".Add(t.Clone());\r\n");
            
            #line 40 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
 } else if (!field.IsMessage()) { 
            
            #line default
            #line hidden
            this.Write("    foreach (var t in from.");
            
            #line 41 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(field.Name.ToNameCs()));
            
            #line default
            #line hidden
            this.Write(") // ");
            
            #line 41 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Helper.FilePos()));
            
            #line default
            #line hidden
            this.Write("\r\n        vm.");
            
            #line 42 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(field.Name.ToNameCs()));
            
            #line default
            #line hidden
            this.Write(".Add(t);\r\n");
            
            #line 43 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
 } else if (!JsonDoc.Files[root.Name].Messages[field.MessageType.Name].IsDefaultBase) { 
            
            #line default
            #line hidden
            this.Write("    vm.");
            
            #line 44 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(field.Name.ToNameCs()));
            
            #line default
            #line hidden
            this.Write(" = new ObservableCollection<");
            
            #line 44 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(field.ToTypeCs()));
            
            #line default
            #line hidden
            this.Write(">(); // ");
            
            #line 44 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Helper.FilePos()));
            
            #line default
            #line hidden
            this.Write("\r\n    foreach (var t in from.");
            
            #line 45 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(field.Name.ToNameCs()));
            
            #line default
            #line hidden
            this.Write(") // ");
            
            #line 45 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Helper.FilePos()));
            
            #line default
            #line hidden
            this.Write("\r\n        vm.");
            
            #line 46 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(field.Name.ToNameCs()));
            
            #line default
            #line hidden
            this.Write(".Add(");
            
            #line 46 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(field.ToTypeCs()));
            
            #line default
            #line hidden
            this.Write(".Clone(");
            
            #line 46 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
 if (field.IsDefaultBase()) { 
            
            #line default
            #line hidden
            this.Write("vm, ");
            
            #line 46 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
 } 
            
            #line default
            #line hidden
            this.Write("(");
            
            #line 46 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(field.ToTypeCs()));
            
            #line default
            #line hidden
            this.Write(")t, isDeep));\r\n");
            
            #line 47 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
 } else { 
            
            #line default
            #line hidden
            this.Write("    vm.");
            
            #line 48 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(field.Name.ToNameCs()));
            
            #line default
            #line hidden
            this.Write(" = new ConfigNodesCollection<");
            
            #line 48 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(field.ToTypeCs()));
            
            #line default
            #line hidden
            this.Write(">(vm); // ");
            
            #line 48 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Helper.FilePos()));
            
            #line default
            #line hidden
            this.Write("\r\n    foreach (var t in from.");
            
            #line 49 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(field.Name.ToNameCs()));
            
            #line default
            #line hidden
            this.Write(") // ");
            
            #line 49 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Helper.FilePos()));
            
            #line default
            #line hidden
            this.Write("\r\n        vm.");
            
            #line 50 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(field.Name.ToNameCs()));
            
            #line default
            #line hidden
            this.Write(".Add(");
            
            #line 50 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(field.ToTypeCs()));
            
            #line default
            #line hidden
            this.Write(".Clone(");
            
            #line 50 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
 if (field.IsDefaultBase()) { 
            
            #line default
            #line hidden
            this.Write("vm, ");
            
            #line 50 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
 } 
            
            #line default
            #line hidden
            this.Write("(");
            
            #line 50 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(field.ToTypeCs()));
            
            #line default
            #line hidden
            this.Write(")t, isDeep));\r\n");
            
            #line 51 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
 } 
            
            #line default
            #line hidden
            
            #line 52 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
      } else if (field.IsMessage() && field.MessageType.Name == "string_nullable") { 
            
            #line default
            #line hidden
            this.Write("    vm.");
            
            #line 53 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(field.Name.ToNameCs()));
            
            #line default
            #line hidden
            this.Write(" = from.");
            
            #line 53 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(field.Name.ToNameCs()));
            
            #line default
            #line hidden
            this.Write("; // ");
            
            #line 53 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Helper.FilePos()));
            
            #line default
            #line hidden
            this.Write("\r\n");
            
            #line 54 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
      } else if (field.IsMessage() && field.MessageType.Name.EndsWith("_nullable")) { 
            
            #line default
            #line hidden
            this.Write("    vm.");
            
            #line 55 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(field.Name.ToNameCs()));
            
            #line default
            #line hidden
            this.Write(" = from.");
            
            #line 55 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(field.Name.ToNameCs()));
            
            #line default
            #line hidden
            this.Write(".HasValue ? from.");
            
            #line 55 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(field.Name.ToNameCs()));
            
            #line default
            #line hidden
            this.Write(".Value : (");
            
            #line 55 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(field.ToTypeCs()));
            
            #line default
            #line hidden
            this.Write(")null; // ");
            
            #line 55 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Helper.FilePos()));
            
            #line default
            #line hidden
            this.Write("\r\n");
            
            #line 56 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
      } else if (field.IsMessage() && field.IsAny()) { 
            
            #line default
            #line hidden
            this.Write("    vm.");
            
            #line 57 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(field.Name.ToNameCs()));
            
            #line default
            #line hidden
            this.Write(" = from.");
            
            #line 57 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(field.Name.ToNameCs()));
            
            #line default
            #line hidden
            this.Write(".Clone(); // ");
            
            #line 57 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Helper.FilePos()));
            
            #line default
            #line hidden
            this.Write("\r\n");
            
            #line 58 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
      } else if (!field.IsCsSimple() && field.IsMessage()) { 
            
            #line default
            #line hidden
            this.Write("    if (isDeep) // ");
            
            #line 59 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Helper.FilePos()));
            
            #line default
            #line hidden
            this.Write("\r\n        vm.");
            
            #line 60 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(field.Name.ToNameCs()));
            
            #line default
            #line hidden
            this.Write(" = ");
            
            #line 60 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(field.ToTypeCs()));
            
            #line default
            #line hidden
            this.Write(".Clone(");
            
            #line 60 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
 if (field.IsDefaultBase()) { 
            
            #line default
            #line hidden
            this.Write("vm, ");
            
            #line 60 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
 } 
            
            #line default
            #line hidden
            this.Write("from.");
            
            #line 60 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(field.Name.ToNameCs()));
            
            #line default
            #line hidden
            this.Write(", isDeep);\r\n");
            
            #line 61 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
      } else { 
            
            #line default
            #line hidden
            this.Write("    vm.");
            
            #line 62 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(field.Name.ToNameCs()));
            
            #line default
            #line hidden
            this.Write(" = from.");
            
            #line 62 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(field.Name.ToNameCs()));
            
            #line default
            #line hidden
            this.Write("; // ");
            
            #line 62 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Helper.FilePos()));
            
            #line default
            #line hidden
            this.Write("\r\n");
            
            #line 63 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
      } 
     } 
if (this.Doc.IsDefaultBase) {

            
            #line default
            #line hidden
            this.Write("    if (isNewGuid) // ");
            
            #line 67 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Helper.FilePos()));
            
            #line default
            #line hidden
            this.Write("\r\n        vm.SetNewGuid();\r\n");
            
            #line 69 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
 } 
            
            #line default
            #line hidden
            this.Write("    return vm;\r\n}\r\npublic static void Update(");
            
            #line 72 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(message.Name.ToNameCs()));
            
            #line default
            #line hidden
            this.Write(" to, ");
            
            #line 72 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(message.Name.ToNameCs()));
            
            #line default
            #line hidden
            this.Write(" from, bool isDeep = true) // ");
            
            #line 72 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Helper.FilePos()));
            
            #line default
            #line hidden
            this.Write("\r\n{\r\n");
            
            #line 74 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
    foreach (var field in message.Fields.InDeclarationOrder()) { 
        if (field.IsAny())
            continue;
        if (field.IsRepeated) { 
            
            #line default
            #line hidden
            
            #line 78 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
 if (field.IsMessage()) { 
            
            #line default
            #line hidden
            this.Write("    if (isDeep) // ");
            
            #line 79 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Helper.FilePos()));
            
            #line default
            #line hidden
            this.Write("\r\n    {\r\n        foreach (var t in to.");
            
            #line 81 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(field.Name.ToNameCs()));
            
            #line default
            #line hidden
            this.Write(".ToList())\r\n        {\r\n            bool isfound = false;\r\n            foreach (va" +
                    "r tt in from.");
            
            #line 84 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(field.Name.ToNameCs()));
            
            #line default
            #line hidden
            this.Write(")\r\n            {\r\n                if (t == tt)\r\n                {\r\n              " +
                    "      isfound = true;\r\n                    ");
            
            #line 89 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(field.ToTypeCs()));
            
            #line default
            #line hidden
            this.Write(".Update((");
            
            #line 89 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(field.ToTypeCs()));
            
            #line default
            #line hidden
            this.Write(")t, (");
            
            #line 89 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(field.ToTypeCs()));
            
            #line default
            #line hidden
            this.Write(")tt, isDeep);\r\n                    break;\r\n                }\r\n            }\r\n    " +
                    "        if (!isfound)\r\n                to.");
            
            #line 94 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(field.Name.ToNameCs()));
            
            #line default
            #line hidden
            this.Write(".Remove(t);\r\n        }\r\n        foreach (var tt in from.");
            
            #line 96 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(field.Name.ToNameCs()));
            
            #line default
            #line hidden
            this.Write(")\r\n        {\r\n            bool isfound = false;\r\n            foreach (var t in to" +
                    ".");
            
            #line 99 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(field.Name.ToNameCs()));
            
            #line default
            #line hidden
            this.Write(".ToList())\r\n            {\r\n                if (t == tt)\r\n                {\r\n     " +
                    "               isfound = true;\r\n                    break;\r\n                }\r\n " +
                    "           }\r\n            if (!isfound)\r\n            {\r\n");
            
            #line 109 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
 if (field.IsDefaultBase()) { 
            
            #line default
            #line hidden
            this.Write("                var p = new ");
            
            #line 110 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(field.ToTypeCs()));
            
            #line default
            #line hidden
            this.Write("(to); // ");
            
            #line 110 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Helper.FilePos()));
            
            #line default
            #line hidden
            this.Write("\r\n");
            
            #line 111 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
 } else { 
            
            #line default
            #line hidden
            this.Write("                var p = new ");
            
            #line 112 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(field.ToTypeCs()));
            
            #line default
            #line hidden
            this.Write("(); // ");
            
            #line 112 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Helper.FilePos()));
            
            #line default
            #line hidden
            this.Write("\r\n");
            
            #line 113 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
 } 
            
            #line default
            #line hidden
            this.Write("                ");
            
            #line 114 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(field.ToTypeCs()));
            
            #line default
            #line hidden
            this.Write(".Update(p, (");
            
            #line 114 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(field.ToTypeCs()));
            
            #line default
            #line hidden
            this.Write(")tt, isDeep);\r\n                to.");
            
            #line 115 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(field.Name.ToNameCs()));
            
            #line default
            #line hidden
            this.Write(".Add(p);\r\n            }\r\n        }\r\n    }\r\n");
            
            #line 119 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
 } else { 
            
            #line default
            #line hidden
            this.Write("        to.");
            
            #line 120 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(field.Name.ToNameCs()));
            
            #line default
            #line hidden
            this.Write(".Clear(); // ");
            
            #line 120 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Helper.FilePos()));
            
            #line default
            #line hidden
            this.Write("\r\n        foreach (var tt in from.");
            
            #line 121 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(field.Name.ToNameCs()));
            
            #line default
            #line hidden
            this.Write(")\r\n        {\r\n            to.");
            
            #line 123 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(field.Name.ToNameCs()));
            
            #line default
            #line hidden
            this.Write(".Add(tt);\r\n        }\r\n");
            
            #line 125 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
 } 
            
            #line default
            #line hidden
            
            #line 126 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
      } else if (field.IsMessage() && field.MessageType.Name == "string_nullable") { 
            
            #line default
            #line hidden
            this.Write("    to.");
            
            #line 127 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(field.Name.ToNameCs()));
            
            #line default
            #line hidden
            this.Write(" = from.");
            
            #line 127 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(field.Name.ToNameCs()));
            
            #line default
            #line hidden
            this.Write("; // ");
            
            #line 127 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Helper.FilePos()));
            
            #line default
            #line hidden
            this.Write("\r\n");
            
            #line 128 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
      } else if (field.IsMessage() && field.MessageType.Name.EndsWith("_nullable")) { 
            
            #line default
            #line hidden
            this.Write("    to.");
            
            #line 129 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(field.Name.ToNameCs()));
            
            #line default
            #line hidden
            this.Write(" = from.");
            
            #line 129 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(field.Name.ToNameCs()));
            
            #line default
            #line hidden
            this.Write(".HasValue ? from.");
            
            #line 129 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(field.Name.ToNameCs()));
            
            #line default
            #line hidden
            this.Write(".Value : (");
            
            #line 129 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(field.ToTypeCs()));
            
            #line default
            #line hidden
            this.Write(")null; // ");
            
            #line 129 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Helper.FilePos()));
            
            #line default
            #line hidden
            this.Write("\r\n");
            
            #line 130 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
      } else if (!field.IsCsSimple() && field.IsMessage()) { 
            
            #line default
            #line hidden
            this.Write("    if (isDeep) // ");
            
            #line 131 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Helper.FilePos()));
            
            #line default
            #line hidden
            this.Write("\r\n        ");
            
            #line 132 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(field.ToTypeCs()));
            
            #line default
            #line hidden
            this.Write(".Update(to.");
            
            #line 132 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(field.Name.ToNameCs()));
            
            #line default
            #line hidden
            this.Write(", from.");
            
            #line 132 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(field.Name.ToNameCs()));
            
            #line default
            #line hidden
            this.Write(", isDeep);\r\n");
            
            #line 133 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
      } else { 
            
            #line default
            #line hidden
            this.Write("    to.");
            
            #line 134 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(field.Name.ToNameCs()));
            
            #line default
            #line hidden
            this.Write(" = from.");
            
            #line 134 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(field.Name.ToNameCs()));
            
            #line default
            #line hidden
            this.Write("; // ");
            
            #line 134 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Helper.FilePos()));
            
            #line default
            #line hidden
            this.Write("\r\n");
            
            #line 135 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
      } 
     } 
     
            
            #line default
            #line hidden
            this.Write("}\r\n");
            
            #line 139 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
 if (this.Doc.IsEditableBase) { 
            
            #line default
            #line hidden
            this.Write("// ");
            
            #line 140 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Helper.FilePos()));
            
            #line default
            #line hidden
            this.Write("\r\n#region IEditable\r\npublic override ");
            
            #line 142 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(message.Name.ToNameCs()));
            
            #line default
            #line hidden
            this.Write(" Backup()\r\n{\r\n    bool isDeep = true;\r\n    this.OnBackupObjectStarting(ref isDeep" +
                    ");\r\n");
            
            #line 146 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
 if (message.IsDefaultBase()) { 
            
            #line default
            #line hidden
            this.Write("    return ");
            
            #line 147 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(message.Name.ToNameCs()));
            
            #line default
            #line hidden
            this.Write(".Clone(");
            
            #line 147 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
 if (message.IsDefaultBase()) { 
            
            #line default
            #line hidden
            this.Write("this.Parent, ");
            
            #line 147 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
 } 
            
            #line default
            #line hidden
            this.Write("this);\r\n");
            
            #line 148 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
 } else { 
            
            #line default
            #line hidden
            this.Write("    return ");
            
            #line 149 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(message.Name.ToNameCs()));
            
            #line default
            #line hidden
            this.Write(".Clone(");
            
            #line 149 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
 if (message.IsDefaultBase()) { 
            
            #line default
            #line hidden
            this.Write("null, ");
            
            #line 149 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
 } 
            
            #line default
            #line hidden
            this.Write("this);\r\n");
            
            #line 150 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
 } 
            
            #line default
            #line hidden
            this.Write("}\r\npartial void OnBackupObjectStarting(ref bool isDeep);\r\npublic override void Re" +
                    "store(");
            
            #line 153 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(message.Name.ToNameCs()));
            
            #line default
            #line hidden
            this.Write(" from)\r\n{\r\n    bool isDeep = true;\r\n    this.OnRestoreObjectStarting(ref isDeep);" +
                    "\r\n    ");
            
            #line 157 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(message.Name.ToNameCs()));
            
            #line default
            #line hidden
            this.Write(".Update(this, from, isDeep);\r\n}\r\npartial void OnRestoreObjectStarting(ref bool is" +
                    "Deep);\r\n#endregion IEditable\r\n");
            
            #line 161 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
 } 
            
            #line default
            #line hidden
            this.Write("// Conversion from \'");
            
            #line 162 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(message.Name));
            
            #line default
            #line hidden
            this.Write("\' to \'");
            
            #line 162 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(message.Name.ToNameCs()));
            
            #line default
            #line hidden
            this.Write("\'\r\npublic static ");
            
            #line 163 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(message.Name.ToNameCs()));
            
            #line default
            #line hidden
            this.Write(" ConvertToVM(");
            
            #line 163 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.protoNameSpace));
            
            #line default
            #line hidden
            this.Write(".");
            
            #line 163 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(message.Name));
            
            #line default
            #line hidden
            this.Write(" m, ");
            
            #line 163 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(message.Name.ToNameCs()));
            
            #line default
            #line hidden
            this.Write(" vm) // ");
            
            #line 163 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Helper.FilePos()));
            
            #line default
            #line hidden
            this.Write("\r\n{\r\n    if (m == null)\r\n    {\r\n        return vm;\r\n    }\r\n");
            
            #line 169 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
    foreach (var field in message.Fields.InDeclarationOrder()) { 
        if (field.IsAny())
            continue;
        if (field.IsRepeated) { 
            
            #line default
            #line hidden
            
            #line 173 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
        if (field.IsCsSimple()) { 
            
            #line default
            #line hidden
            this.Write("    vm.");
            
            #line 174 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(field.Name.ToNameCs()));
            
            #line default
            #line hidden
            this.Write(" = new ObservableCollection<");
            
            #line 174 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(field.ToTypeCs()));
            
            #line default
            #line hidden
            this.Write(">(); // ");
            
            #line 174 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Helper.FilePos()));
            
            #line default
            #line hidden
            this.Write("\r\n    foreach (var t in m.");
            
            #line 175 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(field.Name.ToNameCs()));
            
            #line default
            #line hidden
            this.Write(") // ");
            
            #line 175 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Helper.FilePos()));
            
            #line default
            #line hidden
            this.Write("\r\n    {\r\n        vm.");
            
            #line 177 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(field.Name.ToNameCs()));
            
            #line default
            #line hidden
            this.Write(".Add(t);\r\n    }\r\n");
            
            #line 179 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
        } else if (!JsonDoc.Files[root.Name].Messages[field.MessageType.Name].IsDefaultBase) { 
            
            #line default
            #line hidden
            this.Write("    vm.");
            
            #line 180 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(field.Name.ToNameCs()));
            
            #line default
            #line hidden
            this.Write(" = new ObservableCollection<");
            
            #line 180 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(field.ToTypeCs()));
            
            #line default
            #line hidden
            this.Write(">(); // ");
            
            #line 180 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Helper.FilePos()));
            
            #line default
            #line hidden
            this.Write("\r\n    foreach (var t in m.");
            
            #line 181 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(field.Name.ToNameCs()));
            
            #line default
            #line hidden
            this.Write(") // ");
            
            #line 181 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Helper.FilePos()));
            
            #line default
            #line hidden
            this.Write("\r\n    {\r\n");
            
            #line 183 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
          if (JsonDoc.Files[root.Name].Messages[field.MessageType.Name].IsDefaultBase) { 
            
            #line default
            #line hidden
            this.Write("        var tvm = ");
            
            #line 184 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(field.ToTypeCs()));
            
            #line default
            #line hidden
            this.Write(".ConvertToVM(t, new ");
            
            #line 184 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(field.ToTypeCs()));
            
            #line default
            #line hidden
            this.Write("(vm)); // ");
            
            #line 184 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Helper.FilePos()));
            
            #line default
            #line hidden
            this.Write("\r\n");
            
            #line 185 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
          } 
            
            #line default
            #line hidden
            this.Write("        var tvm = ");
            
            #line 186 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(field.ToTypeCs()));
            
            #line default
            #line hidden
            this.Write(".ConvertToVM(t, new ");
            
            #line 186 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(field.ToTypeCs()));
            
            #line default
            #line hidden
            this.Write("()); // ");
            
            #line 186 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Helper.FilePos()));
            
            #line default
            #line hidden
            this.Write("\r\n        vm.");
            
            #line 187 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(field.Name.ToNameCs()));
            
            #line default
            #line hidden
            this.Write(".Add(tvm);\r\n    }\r\n");
            
            #line 189 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
        } else { 
            
            #line default
            #line hidden
            this.Write("    vm.");
            
            #line 190 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(field.Name.ToNameCs()));
            
            #line default
            #line hidden
            this.Write(" = new ConfigNodesCollection<");
            
            #line 190 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(field.ToTypeCs()));
            
            #line default
            #line hidden
            this.Write(">(vm); // ");
            
            #line 190 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Helper.FilePos()));
            
            #line default
            #line hidden
            this.Write("\r\n    foreach (var t in m.");
            
            #line 191 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(field.Name.ToNameCs()));
            
            #line default
            #line hidden
            this.Write(") // ");
            
            #line 191 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Helper.FilePos()));
            
            #line default
            #line hidden
            this.Write("\r\n    {\r\n");
            
            #line 193 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
          if (JsonDoc.Files[root.Name].Messages[field.MessageType.Name].IsDefaultBase) { 
            
            #line default
            #line hidden
            this.Write("        var tvm = ");
            
            #line 194 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(field.ToTypeCs()));
            
            #line default
            #line hidden
            this.Write(".ConvertToVM(t, new ");
            
            #line 194 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(field.ToTypeCs()));
            
            #line default
            #line hidden
            this.Write("(vm)); // ");
            
            #line 194 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Helper.FilePos()));
            
            #line default
            #line hidden
            this.Write("\r\n");
            
            #line 195 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
          } else { 
            
            #line default
            #line hidden
            this.Write("        var tvm = ");
            
            #line 196 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(field.ToTypeCs()));
            
            #line default
            #line hidden
            this.Write(".ConvertToVM(t); // ");
            
            #line 196 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Helper.FilePos()));
            
            #line default
            #line hidden
            this.Write("\r\n");
            
            #line 197 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
          } 
            
            #line default
            #line hidden
            this.Write("        vm.");
            
            #line 198 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(field.Name.ToNameCs()));
            
            #line default
            #line hidden
            this.Write(".Add(tvm);\r\n    }\r\n");
            
            #line 200 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
        } 
            
            #line default
            #line hidden
            
            #line 201 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
      } else { 
            
            #line default
            #line hidden
            
            #line 202 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
        if (!field.IsCsSimple() && field.IsMessage()) { 
            
            #line default
            #line hidden
            this.Write("    if (vm.");
            
            #line 203 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(field.Name.ToNameCs()));
            
            #line default
            #line hidden
            this.Write(" == null) // ");
            
            #line 203 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Helper.FilePos()));
            
            #line default
            #line hidden
            this.Write("\r\n");
            
            #line 204 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
          if (field.IsDefaultBase()) { 
            
            #line default
            #line hidden
            this.Write("        vm.");
            
            #line 205 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(field.Name.ToNameCs()));
            
            #line default
            #line hidden
            this.Write(" = new ");
            
            #line 205 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(field.ToTypeCs()));
            
            #line default
            #line hidden
            this.Write("(vm); // ");
            
            #line 205 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Helper.FilePos()));
            
            #line default
            #line hidden
            this.Write("\r\n");
            
            #line 206 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
          } else { 
            
            #line default
            #line hidden
            this.Write("        vm.");
            
            #line 207 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(field.Name.ToNameCs()));
            
            #line default
            #line hidden
            this.Write(" = new ");
            
            #line 207 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(field.ToTypeCs()));
            
            #line default
            #line hidden
            this.Write("(); // ");
            
            #line 207 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Helper.FilePos()));
            
            #line default
            #line hidden
            this.Write("\r\n");
            
            #line 208 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
          } 
            
            #line default
            #line hidden
            this.Write("    ");
            
            #line 209 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(field.ToTypeCs()));
            
            #line default
            #line hidden
            this.Write(".ConvertToVM(m.");
            
            #line 209 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(field.Name.ToNameCs()));
            
            #line default
            #line hidden
            this.Write(", vm.");
            
            #line 209 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(field.Name.ToNameCs()));
            
            #line default
            #line hidden
            this.Write("); // ");
            
            #line 209 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Helper.FilePos()));
            
            #line default
            #line hidden
            this.Write("\r\n");
            
            #line 210 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
        } else { 
            
            #line default
            #line hidden
            this.Write("    vm.");
            
            #line 211 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(field.Name.ToNameCs()));
            
            #line default
            #line hidden
            this.Write(" = ");
            
            #line 211 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(field.ConvertToVm("m")));
            
            #line default
            #line hidden
            this.Write("; // ");
            
            #line 211 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Helper.FilePos()));
            
            #line default
            #line hidden
            this.Write("\r\n");
            
            #line 212 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
        } 
        } 
     } 
     
            
            #line default
            #line hidden
            
            #line 216 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
 if (this.Doc.IsDefaultBase) { 
            
            #line default
            #line hidden
            this.Write("    vm.OnInitFromDto(); // ");
            
            #line 217 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Helper.FilePos()));
            
            #line default
            #line hidden
            this.Write("\r\n");
            
            #line 218 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
 } 
            
            #line default
            #line hidden
            this.Write("    return vm;\r\n}\r\n// Conversion from \'");
            
            #line 221 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(message.Name.ToNameCs()));
            
            #line default
            #line hidden
            this.Write("\' to \'");
            
            #line 221 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(message.Name));
            
            #line default
            #line hidden
            this.Write("\'\r\npublic static ");
            
            #line 222 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.protoNameSpace));
            
            #line default
            #line hidden
            this.Write(".");
            
            #line 222 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(message.Name));
            
            #line default
            #line hidden
            this.Write(" ConvertToProto(");
            
            #line 222 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(message.Name.ToNameCs()));
            
            #line default
            #line hidden
            this.Write(" vm) // ");
            
            #line 222 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Helper.FilePos()));
            
            #line default
            #line hidden
            this.Write("\r\n{\r\n    ");
            
            #line 224 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.protoNameSpace));
            
            #line default
            #line hidden
            this.Write(".");
            
            #line 224 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(message.Name));
            
            #line default
            #line hidden
            this.Write(" m = new ");
            
            #line 224 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.protoNameSpace));
            
            #line default
            #line hidden
            this.Write(".");
            
            #line 224 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(message.Name));
            
            #line default
            #line hidden
            this.Write("(); // ");
            
            #line 224 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Helper.FilePos()));
            
            #line default
            #line hidden
            this.Write("\r\n");
            
            #line 225 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
    foreach (var field in message.Fields.InDeclarationOrder()) { 
        if (field.IsRepeated) { 
            
            #line default
            #line hidden
            this.Write("    foreach (var t in vm.");
            
            #line 227 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(field.Name.ToNameCs()));
            
            #line default
            #line hidden
            this.Write(") // ");
            
            #line 227 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Helper.FilePos()));
            
            #line default
            #line hidden
            this.Write("\r\n");
            
            #line 228 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
 if (field.IsCsSimple()) { 
            
            #line default
            #line hidden
            this.Write("        m.");
            
            #line 229 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(field.Name.ToNameCs()));
            
            #line default
            #line hidden
            this.Write(".Add(t); // ");
            
            #line 229 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Helper.FilePos()));
            
            #line default
            #line hidden
            this.Write("\r\n");
            
            #line 230 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
 } else { 
            
            #line default
            #line hidden
            this.Write("        m.");
            
            #line 231 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(field.Name.ToNameCs()));
            
            #line default
            #line hidden
            this.Write(".Add(");
            
            #line 231 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(field.ToTypeCs()));
            
            #line default
            #line hidden
            this.Write(".ConvertToProto((");
            
            #line 231 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(field.ToTypeCs()));
            
            #line default
            #line hidden
            this.Write(")t)); // ");
            
            #line 231 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Helper.FilePos()));
            
            #line default
            #line hidden
            this.Write("\r\n");
            
            #line 232 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
 } 
            
            #line default
            #line hidden
            
            #line 233 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
      } else if (field.IsMessage() && field.MessageType.Name == "string_nullable") { 
            
            #line default
            #line hidden
            this.Write("    m.");
            
            #line 234 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(field.Name.ToNameCs()));
            
            #line default
            #line hidden
            this.Write(" = new ");
            
            #line 234 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.protoNameSpace));
            
            #line default
            #line hidden
            this.Write(".");
            
            #line 234 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(field.MessageType.Name));
            
            #line default
            #line hidden
            this.Write("(); // ");
            
            #line 234 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Helper.FilePos()));
            
            #line default
            #line hidden
            this.Write("\r\n    m.");
            
            #line 235 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(field.Name.ToNameCs()));
            
            #line default
            #line hidden
            this.Write(".Value = string.IsNullOrEmpty(vm.");
            
            #line 235 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(field.Name.ToNameCs()));
            
            #line default
            #line hidden
            this.Write(") ? \"\" : vm.");
            
            #line 235 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(field.Name.ToNameCs()));
            
            #line default
            #line hidden
            this.Write(";\r\n    m.");
            
            #line 236 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(field.Name.ToNameCs()));
            
            #line default
            #line hidden
            this.Write(".HasValue = !string.IsNullOrEmpty(vm.");
            
            #line 236 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(field.Name.ToNameCs()));
            
            #line default
            #line hidden
            this.Write(");\r\n");
            
            #line 237 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
      } else if (field.IsMessage() && field.MessageType.Name.EndsWith("_nullable")) { 
            
            #line default
            #line hidden
            this.Write("    m.");
            
            #line 238 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(field.Name.ToNameCs()));
            
            #line default
            #line hidden
            this.Write(" = new ");
            
            #line 238 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.protoNameSpace));
            
            #line default
            #line hidden
            this.Write(".");
            
            #line 238 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(field.MessageType.Name));
            
            #line default
            #line hidden
            this.Write("(); // ");
            
            #line 238 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Helper.FilePos()));
            
            #line default
            #line hidden
            this.Write("\r\n    m.");
            
            #line 239 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(field.Name.ToNameCs()));
            
            #line default
            #line hidden
            this.Write(".HasValue = vm.");
            
            #line 239 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(field.Name.ToNameCs()));
            
            #line default
            #line hidden
            this.Write(".HasValue;\r\n    if (vm.");
            
            #line 240 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(field.Name.ToNameCs()));
            
            #line default
            #line hidden
            this.Write(".HasValue)\r\n        m.");
            
            #line 241 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(field.Name.ToNameCs()));
            
            #line default
            #line hidden
            this.Write(".Value = vm.");
            
            #line 241 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(field.Name.ToNameCs()));
            
            #line default
            #line hidden
            this.Write(".Value;\r\n");
            
            #line 242 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
      } else if (!field.IsCsSimple() && field.IsMessage() && !field.IsAny()) { 
            
            #line default
            #line hidden
            this.Write("    m.");
            
            #line 243 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(field.Name.ToNameCs()));
            
            #line default
            #line hidden
            this.Write(" = ");
            
            #line 243 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(field.ToTypeCs()));
            
            #line default
            #line hidden
            this.Write(".ConvertToProto(vm.");
            
            #line 243 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(field.Name.ToNameCs()));
            
            #line default
            #line hidden
            this.Write("); // ");
            
            #line 243 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Helper.FilePos()));
            
            #line default
            #line hidden
            this.Write("\r\n");
            
            #line 244 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
      } else if (field.IsBytes()) { 
            
            #line default
            #line hidden
            this.Write("    m.");
            
            #line 245 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(field.Name.ToNameCs()));
            
            #line default
            #line hidden
            this.Write(" = ByteString.CopyFrom(vm.");
            
            #line 245 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(field.Name.ToNameCs()));
            
            #line default
            #line hidden
            this.Write("); // ");
            
            #line 245 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Helper.FilePos()));
            
            #line default
            #line hidden
            this.Write("\r\n");
            
            #line 246 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
      } else if (field.FieldType == Google.Protobuf.Reflection.FieldType.Enum) {
            
            #line default
            #line hidden
            this.Write("    m.");
            
            #line 247 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(field.Name.ToNameCs()));
            
            #line default
            #line hidden
            this.Write(" = (");
            
            #line 247 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.protoNameSpace));
            
            #line default
            #line hidden
            this.Write(".");
            
            #line 247 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(field.EnumType.Name));
            
            #line default
            #line hidden
            this.Write(")vm.");
            
            #line 247 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(field.Name.ToNameCs()));
            
            #line default
            #line hidden
            this.Write("; // ");
            
            #line 247 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Helper.FilePos()));
            
            #line default
            #line hidden
            this.Write("\r\n");
            
            #line 248 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
      } else { 
            
            #line default
            #line hidden
            this.Write("    m.");
            
            #line 249 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(field.Name.ToNameCs()));
            
            #line default
            #line hidden
            this.Write(" = vm.");
            
            #line 249 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(field.Name.ToNameCs()));
            
            #line default
            #line hidden
            this.Write("; // ");
            
            #line 249 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Helper.FilePos()));
            
            #line default
            #line hidden
            this.Write("\r\n");
            
            #line 250 "C:\dev\vSharpStudio\generators\GenFromProto\Clone.tt"
      } 
     } 
     
            
            #line default
            #line hidden
            this.Write("    return m;\r\n}\r\n");
            return this.GenerationEnvironment.ToString();
        }
    }
    
    #line default
    #line hidden
    #region Base class
    /// <summary>
    /// Base class for this transformation
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "16.0.0.0")]
    public class CloneBase
    {
        #region Fields
        private global::System.Text.StringBuilder generationEnvironmentField;
        private global::System.CodeDom.Compiler.CompilerErrorCollection errorsField;
        private global::System.Collections.Generic.List<int> indentLengthsField;
        private string currentIndentField = "";
        private bool endsWithNewline;
        private global::System.Collections.Generic.IDictionary<string, object> sessionField;
        #endregion
        #region Properties
        /// <summary>
        /// The string builder that generation-time code is using to assemble generated output
        /// </summary>
        protected System.Text.StringBuilder GenerationEnvironment
        {
            get
            {
                if ((this.generationEnvironmentField == null))
                {
                    this.generationEnvironmentField = new global::System.Text.StringBuilder();
                }
                return this.generationEnvironmentField;
            }
            set
            {
                this.generationEnvironmentField = value;
            }
        }
        /// <summary>
        /// The error collection for the generation process
        /// </summary>
        public System.CodeDom.Compiler.CompilerErrorCollection Errors
        {
            get
            {
                if ((this.errorsField == null))
                {
                    this.errorsField = new global::System.CodeDom.Compiler.CompilerErrorCollection();
                }
                return this.errorsField;
            }
        }
        /// <summary>
        /// A list of the lengths of each indent that was added with PushIndent
        /// </summary>
        private System.Collections.Generic.List<int> indentLengths
        {
            get
            {
                if ((this.indentLengthsField == null))
                {
                    this.indentLengthsField = new global::System.Collections.Generic.List<int>();
                }
                return this.indentLengthsField;
            }
        }
        /// <summary>
        /// Gets the current indent we use when adding lines to the output
        /// </summary>
        public string CurrentIndent
        {
            get
            {
                return this.currentIndentField;
            }
        }
        /// <summary>
        /// Current transformation session
        /// </summary>
        public virtual global::System.Collections.Generic.IDictionary<string, object> Session
        {
            get
            {
                return this.sessionField;
            }
            set
            {
                this.sessionField = value;
            }
        }
        #endregion
        #region Transform-time helpers
        /// <summary>
        /// Write text directly into the generated output
        /// </summary>
        public void Write(string textToAppend)
        {
            if (string.IsNullOrEmpty(textToAppend))
            {
                return;
            }
            // If we're starting off, or if the previous text ended with a newline,
            // we have to append the current indent first.
            if (((this.GenerationEnvironment.Length == 0) 
                        || this.endsWithNewline))
            {
                this.GenerationEnvironment.Append(this.currentIndentField);
                this.endsWithNewline = false;
            }
            // Check if the current text ends with a newline
            if (textToAppend.EndsWith(global::System.Environment.NewLine, global::System.StringComparison.CurrentCulture))
            {
                this.endsWithNewline = true;
            }
            // This is an optimization. If the current indent is "", then we don't have to do any
            // of the more complex stuff further down.
            if ((this.currentIndentField.Length == 0))
            {
                this.GenerationEnvironment.Append(textToAppend);
                return;
            }
            // Everywhere there is a newline in the text, add an indent after it
            textToAppend = textToAppend.Replace(global::System.Environment.NewLine, (global::System.Environment.NewLine + this.currentIndentField));
            // If the text ends with a newline, then we should strip off the indent added at the very end
            // because the appropriate indent will be added when the next time Write() is called
            if (this.endsWithNewline)
            {
                this.GenerationEnvironment.Append(textToAppend, 0, (textToAppend.Length - this.currentIndentField.Length));
            }
            else
            {
                this.GenerationEnvironment.Append(textToAppend);
            }
        }
        /// <summary>
        /// Write text directly into the generated output
        /// </summary>
        public void WriteLine(string textToAppend)
        {
            this.Write(textToAppend);
            this.GenerationEnvironment.AppendLine();
            this.endsWithNewline = true;
        }
        /// <summary>
        /// Write formatted text directly into the generated output
        /// </summary>
        public void Write(string format, params object[] args)
        {
            this.Write(string.Format(global::System.Globalization.CultureInfo.CurrentCulture, format, args));
        }
        /// <summary>
        /// Write formatted text directly into the generated output
        /// </summary>
        public void WriteLine(string format, params object[] args)
        {
            this.WriteLine(string.Format(global::System.Globalization.CultureInfo.CurrentCulture, format, args));
        }
        /// <summary>
        /// Raise an error
        /// </summary>
        public void Error(string message)
        {
            System.CodeDom.Compiler.CompilerError error = new global::System.CodeDom.Compiler.CompilerError();
            error.ErrorText = message;
            this.Errors.Add(error);
        }
        /// <summary>
        /// Raise a warning
        /// </summary>
        public void Warning(string message)
        {
            System.CodeDom.Compiler.CompilerError error = new global::System.CodeDom.Compiler.CompilerError();
            error.ErrorText = message;
            error.IsWarning = true;
            this.Errors.Add(error);
        }
        /// <summary>
        /// Increase the indent
        /// </summary>
        public void PushIndent(string indent)
        {
            if ((indent == null))
            {
                throw new global::System.ArgumentNullException("indent");
            }
            this.currentIndentField = (this.currentIndentField + indent);
            this.indentLengths.Add(indent.Length);
        }
        /// <summary>
        /// Remove the last indent that was added with PushIndent
        /// </summary>
        public string PopIndent()
        {
            string returnValue = "";
            if ((this.indentLengths.Count > 0))
            {
                int indentLength = this.indentLengths[(this.indentLengths.Count - 1)];
                this.indentLengths.RemoveAt((this.indentLengths.Count - 1));
                if ((indentLength > 0))
                {
                    returnValue = this.currentIndentField.Substring((this.currentIndentField.Length - indentLength));
                    this.currentIndentField = this.currentIndentField.Remove((this.currentIndentField.Length - indentLength));
                }
            }
            return returnValue;
        }
        /// <summary>
        /// Remove any indentation
        /// </summary>
        public void ClearIndent()
        {
            this.indentLengths.Clear();
            this.currentIndentField = "";
        }
        #endregion
        #region ToString Helpers
        /// <summary>
        /// Utility class to produce culture-oriented representation of an object as a string.
        /// </summary>
        public class ToStringInstanceHelper
        {
            private System.IFormatProvider formatProviderField  = global::System.Globalization.CultureInfo.InvariantCulture;
            /// <summary>
            /// Gets or sets format provider to be used by ToStringWithCulture method.
            /// </summary>
            public System.IFormatProvider FormatProvider
            {
                get
                {
                    return this.formatProviderField ;
                }
                set
                {
                    if ((value != null))
                    {
                        this.formatProviderField  = value;
                    }
                }
            }
            /// <summary>
            /// This is called from the compile/run appdomain to convert objects within an expression block to a string
            /// </summary>
            public string ToStringWithCulture(object objectToConvert)
            {
                if ((objectToConvert == null))
                {
                    throw new global::System.ArgumentNullException("objectToConvert");
                }
                System.Type t = objectToConvert.GetType();
                System.Reflection.MethodInfo method = t.GetMethod("ToString", new System.Type[] {
                            typeof(System.IFormatProvider)});
                if ((method == null))
                {
                    return objectToConvert.ToString();
                }
                else
                {
                    return ((string)(method.Invoke(objectToConvert, new object[] {
                                this.formatProviderField })));
                }
            }
        }
        private ToStringInstanceHelper toStringHelperField = new ToStringInstanceHelper();
        /// <summary>
        /// Helper to produce culture-oriented representation of an object as a string
        /// </summary>
        public ToStringInstanceHelper ToStringHelper
        {
            get
            {
                return this.toStringHelperField;
            }
        }
        #endregion
    }
    #endregion
}
