<#@ template language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<# if (this.Doc.IsValidatableBase) { #>

public void Accept<#= root.Package.ToNameCs() #>NodeVisitor(<#= root.Package.ToNameCs() #>Visitor visitor) // <#=Helper.FilePos() #>
{
    Contract.Requires(visitor != null);
    if (visitor.Token.IsCancellationRequested)
    {
        return;
    }
    visitor.Visit(this);
<# foreach (var field in this.message.Fields.InDeclarationOrder()) { 
     if (field.IsCsSimple() || !this.Doc.IsValidatableBase)
       continue;
#>
<# try { if (field.IsRepeated) { #>
<# if (!field.IsAny()) { #>
    foreach (var t in this.<#= field.Name.ToNameCs() #>)
    {
        t.Accept<#= root.Package.ToNameCs() #>NodeVisitor(visitor);
    }
<# } #>
<# } else if (field.MessageType.FullName == "google.protobuf.Any") { #>
    // this.<#= field.Name.ToNameCs() #>.Accept<#= root.Package.ToNameCs() #>NodeVisitor(visitor);
<# } else if (this.Doc.IsValidatableBase) { #>
    this.<#= field.Name.ToNameCs() #>.Accept<#= root.Package.ToNameCs() #>NodeVisitor(visitor); // <#=Helper.FilePos() #>

<# } } catch(Exception) { 
} #>
<# } #>
    visitor.VisitEnd(this);
}
<# } #>