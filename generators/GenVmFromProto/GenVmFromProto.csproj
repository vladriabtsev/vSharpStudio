<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <ProjectGuid>{EEAF63A0-C59F-468B-AA1B-58865E84E44E}</ProjectGuid>
    <OutputType>Exe</OutputType>
    <TargetFrameworks>net7.0</TargetFrameworks>
    <AutoGenerateBindingRedirects>true</AutoGenerateBindingRedirects>
    <AssemblyTitle>GenVmFromProto</AssemblyTitle>
    <Product>GenVmFromProto</Product>
    <Copyright>Copyright ©  2019</Copyright>
    <GenerateAssemblyInfo>false</GenerateAssemblyInfo>
    <OutputPath>bin\$(Configuration)\</OutputPath>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
    <DebugType>full</DebugType>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
    <DebugType>pdbonly</DebugType>
  </PropertyGroup>
  <ItemGroup>
    <PackageReference Include="CommandLineParser" Version="2.9.1" />
    <PackageReference Include="Microsoft.CSharp" Version="4.7.0" />
    <PackageReference Include="Microsoft.Extensions.Logging" Version="8.0.0" />
    <PackageReference Include="Serilog" Version="3.1.1" />
    <PackageReference Include="Serilog.Extensions.Logging" Version="8.0.0" />
    <PackageReference Include="Serilog.Sinks.File" Version="5.0.0" />
    <PackageReference Include="System.CodeDom" Version="8.0.0" />
    <PackageReference Include="System.Data.DataSetExtensions" Version="4.5.0" />
    <PackageReference Include="System.Net.Http" Version="4.3.4" />
    <PackageReference Include="Google.Protobuf" Version="3.25.2" />
    <PackageReference Include="Grpc.Tools" Version="2.60.0">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
  </ItemGroup>
  <ItemGroup>
    <Compile Update="AcceptValidator.cs">
      <DesignTime>True</DesignTime>
      <AutoGen>True</AutoGen>
      <DependentUpon>AcceptValidator.tt</DependentUpon>
    </Compile>
    <Compile Update="Class.cs">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>Class.tt</DependentUpon>
    </Compile>
    <Compile Update="NodeVisitor.cs">
      <DependentUpon>NodeVisitor.tt</DependentUpon>
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
    </Compile>
    <Compile Update="ModelInterfaces.cs">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>ModelInterfaces.tt</DependentUpon>
    </Compile>
    <Compile Update="ValidationVisitor.cs">
      <DependentUpon>ValidationVisitor.tt</DependentUpon>
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
    </Compile>
    <Compile Update="IVisitorProto.cs">
      <DependentUpon>IVisitorProto.tt</DependentUpon>
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
    </Compile>
    <Compile Update="Clone.cs">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>Clone.tt</DependentUpon>
    </Compile>
    <Compile Update="Comparison.cs">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>Comparison.tt</DependentUpon>
    </Compile>
    <Compile Update="NameSpace.cs">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>NameSpace.tt</DependentUpon>
    </Compile>
    <Compile Update="Property.cs">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>Property.tt</DependentUpon>
    </Compile>
    <Compile Update="IVisitorConfigNode.cs">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>IVisitorConfigNode.tt</DependentUpon>
    </Compile>
    <Compile Update="AcceptNodeVisitor.cs">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>AcceptNodeVisitor.tt</DependentUpon>
    </Compile>
  </ItemGroup>
  <ItemGroup>
    <None Include="proto.json" />
  </ItemGroup>
  <ItemGroup>
    <Content Include="Class.tt">
      <Generator>TextTemplatingFilePreprocessor</Generator>
      <LastGenOutput>Class.cs</LastGenOutput>
    </Content>
    <Content Include="Clone.tt">
      <Generator>TextTemplatingFilePreprocessor</Generator>
      <LastGenOutput>Clone.cs</LastGenOutput>
    </Content>
    <Content Include="Comparison.tt">
      <Generator>TextTemplatingFilePreprocessor</Generator>
      <LastGenOutput>Comparison.cs</LastGenOutput>
    </Content>
    <Content Include="NodeVisitor.tt">
      <Generator>TextTemplatingFilePreprocessor</Generator>
      <LastGenOutput>NodeVisitor.cs</LastGenOutput>
    </Content>
    <Content Include="ModelInterfaces.tt">
      <Generator>TextTemplatingFilePreprocessor</Generator>
      <LastGenOutput>ModelInterfaces.cs</LastGenOutput>
    </Content>
    <Content Include="ValidationVisitor.tt">
      <Generator>TextTemplatingFilePreprocessor</Generator>
      <LastGenOutput>ValidationVisitor.cs</LastGenOutput>
    </Content>
    <Content Include="NameSpace.tt">
      <Generator>TextTemplatingFilePreprocessor</Generator>
      <LastGenOutput>NameSpace.cs</LastGenOutput>
    </Content>
    <Content Include="Property.tt">
      <Generator>TextTemplatingFilePreprocessor</Generator>
      <LastGenOutput>Property.cs</LastGenOutput>
    </Content>
    <Content Include="IVisitorProto.tt">
      <Generator>TextTemplatingFilePreprocessor</Generator>
      <LastGenOutput>IVisitorProto.cs</LastGenOutput>
    </Content>
    <Content Include="IVisitorConfigNode.tt">
      <Generator>TextTemplatingFilePreprocessor</Generator>
      <LastGenOutput>IVisitorConfigNode.cs</LastGenOutput>
    </Content>
    <Content Include="AcceptNodeVisitor.tt">
      <Generator>TextTemplatingFilePreprocessor</Generator>
      <LastGenOutput>AcceptNodeVisitor.cs</LastGenOutput>
    </Content>
    <Content Include="AcceptValidator.tt">
      <Generator>TextTemplatingFilePreprocessor</Generator>
      <LastGenOutput>AcceptValidator.cs</LastGenOutput>
    </Content>
  </ItemGroup>
  <ItemGroup>
    <Compile Include="..\..\vSharpStudio.common\LogerExt.cs" Link="LogerExt.cs" />
    <Compile Include="..\..\vSharpStudio.common\Logger.cs" Link="Logger.cs" />
    <Compile Include="..\..\vSharpStudio.common\t4.cs" Link="t4.cs" />
    <Compile Include="..\..\vSharpStudio\GlobalSuppressions.cs" Link="GlobalSuppressions.cs" />
  </ItemGroup>
  <ItemGroup>
    <Folder Include="proto\" />
    <Protobuf Include="..\..\proto\proto_doc.proto" GrpcServices="None" Link="proto\proto_doc.proto" />
    <Protobuf Include="..\..\proto\plugin_sample.proto" GrpcServices="None" Link="proto\plugin_sample.proto" />
    <Protobuf Include="..\..\proto\plugin_sample2.proto" GrpcServices="None" Link="proto\plugin_sample2.proto" />
    <Protobuf Include="..\..\proto\vsharpstudio.proto" Link="proto\vsharpstudio.proto" />
  </ItemGroup>


  <!--***** protoc-gen-doc start *****-->
  <!--<UsingTask TaskName="ProtocGenDocExe" AssemblyFile="$(MSBuildProjectDirectory)\..\GenTask\bin\Debug\net48\GenTask.dll" />-->
  <!-- protoc-gen-doc generation for modified proto files -->
  <Target Name="ProtocGenDoc" AfterTargets="Protobuf_AfterCompile" Condition=" '@(Protobuf_Compile)' != '' " Outputs="%(Protobuf_Compile.Fullpath)">
  <!--<Target Name="ProtocGenDoc" AfterTargets="PrepareForProtocGenDoc" Outputs="%(Protobuf_Rooted.Fullpath)">-->
    <!--https://github.com/grpc/grpc/blob/master/src/csharp/Grpc.Tools/build/_protobuf/Google.Protobuf.Tools.targets-->
    <PropertyGroup>
      <SharpStudioRelativePath></SharpStudioRelativePath>
      <ProtoName>@(Protobuf_Compile->'%(Filename)')</ProtoName>
      <ProtoFileDir>$(SolutionDir)proto</ProtoFileDir>
      <SharpStudioRelativePath></SharpStudioRelativePath>
      <ProtoFile>$(ProtoName).proto</ProtoFile>
      <ProtoDocGenPath>$(SolutionDir)$(SharpStudioRelativePath)protoc\protoc-gen-doc.exe</ProtoDocGenPath>
      <DocGenOutPath>$(SolutionDir)doc</DocGenOutPath>
      <ProtoDocGenCommandHtml>$(Protobuf_ProtocFullPath) --plugin=protoc-gen-doc=$(ProtoDocGenPath) --doc_out=$(DocGenOutPath) --doc_opt=html,$(ProtoName).html -I $(ProtoFileDir);$(Protobuf_StandardImportsPath) $(ProtoFile)</ProtoDocGenCommandHtml>
      <ProtoDocGenCommandMd>$(Protobuf_ProtocFullPath) --plugin=protoc-gen-doc=$(ProtoDocGenPath) --doc_out=$(DocGenOutPath) --doc_opt=markdown,$(ProtoName).md -I $(ProtoFileDir);$(Protobuf_StandardImportsPath) $(ProtoFile)</ProtoDocGenCommandMd>
      <ProtoDocGenCommandJson>$(Protobuf_ProtocFullPath) --plugin=protoc-gen-doc=$(ProtoDocGenPath) --doc_out=$(DocGenOutPath) --doc_opt=json,$(ProtoName).json -I $(ProtoFileDir);$(Protobuf_StandardImportsPath) $(ProtoFile)</ProtoDocGenCommandJson>
      <!--<VmNamespace>vSharpStudio.vm.ViewModels</VmNamespace>
      <VmInterfacesNamespace>vSharpStudio.common</VmInterfacesNamespace>
      <OutDirGenVm>bin\Debug\net7.0</OutDirGenVm>-->
      <!--<ProtoDocGenCommandVm>$(SolutionDir)$(SharpStudioRelativePath)generators\GenVmFromProto\$(OutDirGenVm)\GenVmFromProto.exe -r -m -p $(ProtoName) -o $(ProjectDir)Generated\Proto$(ProtoName)ViewModels.cs -n $(VmNamespace) -d $(DocGenOutPath)\ -b ConfigObjectVmGenSettings</ProtoDocGenCommandVm>
      <ProtoDocGenCommandVmInterface>$(SolutionDir)$(SharpStudioRelativePath)generators\GenVmFromProto\$(OutDirGenVm)\GenVmFromProto.exe -r -i -p $(ProtoName) -o $(ProjectDir)Generated\Proto$(ProtoName)ViewModelInterfaces.cs -n $(VmInterfacesNamespace) -d $(DocGenOutPath)\ -b ConfigObjectVmGenSettings</ProtoDocGenCommandVmInterface>-->
    </PropertyGroup>
    <Message Importance="high" Text="$(ProjectName)****************** Start Proto Doc Generation ********************" />
    <Message Importance="high" Text="$(ProjectName)**              ProtoName: $(ProtoName)" />
    <!--<Message Importance="high" Text="$(ProjectName)**        Protobuf_Rooted: @(Protobuf_Rooted)" />
    <Message Importance="high" Text="$(ProjectName)**               Protobuf: @(Protobuf)" />
    <Message Importance="high" Text="$(ProjectName)**       Protobuf_Compile: @(Protobuf_Compile)" />-->
    <Message Importance="high" Text="$(ProjectName)**           ProtoFileDir: $(ProtoFileDir)" />
    <!--<Message Importance="high" Text="$(ProjectName)**            OutDirGenVm: $(OutDirGenVm)" />-->
    <Message Importance="high" Text="$(ProjectName)**                 protoc: $(Protobuf_ProtocFullPath)" />
    <Message Importance="high" Text="$(ProjectName)**SharpStudioRelativePath: $(SharpStudioRelativePath)" />
    <Message Importance="high" Text="$(ProjectName)**         protoc-gen-doc: $(ProtoDocGenPath)" />
    <Message Importance="high" Text="$(ProjectName)**          DocGenOutPath: $(DocGenOutPath)" />
    <Message Importance="high" Text="$(ProjectName)** ProtoDocGenCommandJson: $(ProtoDocGenCommandJson)" />
    <!--<Message Importance="high" Text="$(ProjectName)**   ProtoDocGenCommandVm: $(ProtoDocGenCommandVm)" />
    <Message Importance="high" Text="$(ProjectName)** ...nCommandVmInterface: $(ProtoDocGenCommandVmInterface)" />-->
    <Message Importance="high" Text="$(ProjectName)** Generating HTML ..." />
    <Exec Command="$(ProtoDocGenCommandHtml)" />
    <Message Importance="high" Text="$(ProjectName)** Generating MD ..." />
    <Exec Command="$(ProtoDocGenCommandMd)" />
    <Message Importance="high" Text="$(ProjectName)** Generating JSON ..." />
    <Exec Command="$(ProtoDocGenCommandJson)" />
    <Message Importance="high" Text="$(ProjectName)****************** End Proto Doc Generation **********************" />
    <!--<ProtocGenDocExe ProtocFullPath="$(Protobuf_ProtocFullPath)"
                     Protobuf_StandardImportsPath="$(Protobuf_StandardImportsPath)"
                     ProtocGenDocFullPath="$(ProtoDocGenPath)"
                     ProtoFile="%(Protobuf_Compile.FullPath)"
                     ProtocGenDocOutputDir="$(DocGenOutPath)"
                     GenDocType="json">
    </ProtocGenDocExe>-->
  </Target>
  <!--***** protoc-gen-doc end *****-->



  <!--<Target Name="GenProtoDoc" AfterTargets="Protobuf_AfterCompile" Condition=" '@(Protobuf_Compile)' != '' ">-->
    <Target Name="GenProtoDoc" Condition=" '@(Protobuf_Compile)' != '' ">
    <!--https://github.com/grpc/grpc/blob/master/src/csharp/Grpc.Tools/build/_protobuf/Google.Protobuf.Tools.targets-->
    <PropertyGroup>
      <ProtoName>plugin_sample</ProtoName>
      <!--<VmNamespace>vPlugin.Sample</VmNamespace>-->
      <!--<VmInterfacesNamespace>vPlugin.Sample</VmInterfacesNamespace>-->
      <!--<OutDirGenVm>bin\Debug\net7.0</OutDirGenVm>-->
      <ProtoFileDir>$(SolutionDir)proto</ProtoFileDir>
      <SharpStudioRelativePath></SharpStudioRelativePath>
      <ProtoFile>$(ProtoName).proto</ProtoFile>
      <ProtoDocGen>$(SolutionDir)$(SharpStudioRelativePath)protoc\protoc-gen-doc.exe</ProtoDocGen>
      <DocGenOutPath>$(SolutionDir)doc</DocGenOutPath>
      <ProtoDocGenCommandHtml>$(Protobuf_ProtocFullPath) --plugin=protoc-gen-doc=$(ProtoDocGen) --doc_out=$(DocGenOutPath) --doc_opt=html,$(ProtoName).html -I $(ProtoFileDir);$(Protobuf_StandardImportsPath) $(ProtoFile)</ProtoDocGenCommandHtml>
      <ProtoDocGenCommandMd>$(Protobuf_ProtocFullPath) --plugin=protoc-gen-doc=$(ProtoDocGen) --doc_out=$(DocGenOutPath) --doc_opt=markdown,$(ProtoName).md -I $(ProtoFileDir);$(Protobuf_StandardImportsPath) $(ProtoFile)</ProtoDocGenCommandMd>
      <ProtoDocGenCommandJson>$(Protobuf_ProtocFullPath) --plugin=protoc-gen-doc=$(ProtoDocGen) --doc_out=$(DocGenOutPath) --doc_opt=json,$(ProtoName).json -I $(ProtoFileDir);$(Protobuf_StandardImportsPath) $(ProtoFile)</ProtoDocGenCommandJson>
      <!--<ProtoDocGenCommandVm>$(SolutionDir)$(SharpStudioRelativePath)generators\GenVmFromProto\$(OutDirGenVm)\GenVmFromProto.exe -r -m -p $(ProtoName) -o $(ProjectDir)Generated\Proto$(ProtoName)ViewModels.cs -n $(VmNamespace) -d $(DocGenOutPath)\ -b ConfigObjectVmGenSettings</ProtoDocGenCommandVm>
      <ProtoDocGenCommandVmInterface>$(SolutionDir)$(SharpStudioRelativePath)generators\GenVmFromProto\$(OutDirGenVm)\GenVmFromProto.exe -r -i -p $(ProtoName) -o $(ProjectDir)Generated\Proto$(ProtoName)ViewModelInterfaces.cs -n $(VmInterfacesNamespace) -d $(DocGenOutPath)\ -b ConfigObjectVmGenSettings</ProtoDocGenCommandVmInterface>-->
    </PropertyGroup>
    <Message Importance="high" Text="$(ProjectName)****************** Start Proto Doc Generation ********************" />
    <Message Importance="high" Text="$(ProjectName)**               Protobuf: @(Protobuf)" />
    <Message Importance="high" Text="$(ProjectName)**       Protobuf_Compile: @(Protobuf_Compile)" />
    <Message Importance="high" Text="$(ProjectName)**              ProtoFile: $(ProtoFile)" />
    <Message Importance="high" Text="$(ProjectName)**           ProtoFileDir: $(ProtoFileDir)" />
    <Message Importance="high" Text="$(ProjectName)**            OutDirGenVm: $(OutDirGenVm)" />
    <Message Importance="high" Text="$(ProjectName)**                 protoc: $(Protobuf_ProtocFullPath)" />
    <Message Importance="high" Text="$(ProjectName)**         protoc-gen-doc: $(ProtoDocGen)" />
    <Message Importance="high" Text="$(ProjectName)**          DocGenOutPath: $(DocGenOutPath)" />
    <Message Importance="high" Text="$(ProjectName)** ProtoDocGenCommandJson: $(ProtoDocGenCommandJson)" />
    <Message Importance="high" Text="$(ProjectName)**   ProtoDocGenCommandVm: $(ProtoDocGenCommandVm)" />
    <Message Importance="high" Text="$(ProjectName)** ...nCommandVmInterface: $(ProtoDocGenCommandVmInterface)" />
    <!--<Message Importance="high" Text="$(ProjectName)** Generating HTML ..." />
    <Exec Command="$(ProtoDocGenCommandHtml)" />
    <Message Importance="high" Text="$(ProjectName)** Generating MD ..." />
    <Exec Command="$(ProtoDocGenCommandMd)" />
    <Message Importance="high" Text="$(ProjectName)** Generating JSON ..." />
    <Exec Command="$(ProtoDocGenCommandJson)" />
    <Message Importance="high" Text="$(ProjectName)** Generating proto VM ..." />
    <Exec Command="$(ProtoDocGenCommandVm)" />
    <Message Importance="high" Text="$(ProjectName)** Generating proto VM Interfaces ..." />
    <Exec Command="$(ProtoDocGenCommandVmInterface)" />-->
    <Message Importance="high" Text="$(ProjectName)****************** End Proto Doc Generation **********************" />
  </Target>
  <ItemGroup>
    <Service Include="{508349b6-6b84-4df5-91f0-309beebad82d}" />
  </ItemGroup>
</Project>